// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd_report_sample.proto

package simpleperf.cleanup.proto;

public final class SimpleperfReport {
  private SimpleperfReport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.Sample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 1;</code>
     * @return Whether the time field is set.
     */
    boolean hasTime();
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 1;</code>
     * @return The time.
     */
    long getTime();

    /**
     * <code>optional int32 thread_id = 2;</code>
     * @return Whether the threadId field is set.
     */
    boolean hasThreadId();
    /**
     * <code>optional int32 thread_id = 2;</code>
     * @return The threadId.
     */
    int getThreadId();

    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry>
        getCallchainList();
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getCallchain(int index);
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    int getCallchainCount();
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    java.util.List<? extends simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder>
        getCallchainOrBuilderList();
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder getCallchainOrBuilder(
        int index);

    /**
     * <pre>
     * Simpleperf generates one sample whenever a specified amount of events happen
     * while running a monitored thread. So each sample belongs to one event type.
     * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
     * By using '-e' option, we can ask simpleperf to record samples for one or more
     * event types.
     * Each event type generates samples independently. But recording more event types
     * will cost more cpu time generating samples, which may affect the monitored threads
     * and sample lost rate.
     * event_count field shows the count of the events (belong to the sample's event type)
     * that have happened since last sample (belong to the sample's event type) for the
     * same thread. However, if there are lost samples between current sample and previous
     * sample, the event_count is the count of events from the last lost sample.
     * </pre>
     *
     * <code>optional uint64 event_count = 4;</code>
     * @return Whether the eventCount field is set.
     */
    boolean hasEventCount();
    /**
     * <pre>
     * Simpleperf generates one sample whenever a specified amount of events happen
     * while running a monitored thread. So each sample belongs to one event type.
     * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
     * By using '-e' option, we can ask simpleperf to record samples for one or more
     * event types.
     * Each event type generates samples independently. But recording more event types
     * will cost more cpu time generating samples, which may affect the monitored threads
     * and sample lost rate.
     * event_count field shows the count of the events (belong to the sample's event type)
     * that have happened since last sample (belong to the sample's event type) for the
     * same thread. However, if there are lost samples between current sample and previous
     * sample, the event_count is the count of events from the last lost sample.
     * </pre>
     *
     * <code>optional uint64 event_count = 4;</code>
     * @return The eventCount.
     */
    long getEventCount();

    /**
     * <pre>
     * An index in meta_info.event_type, shows which event type current sample belongs to.
     * </pre>
     *
     * <code>optional uint32 event_type_id = 5;</code>
     * @return Whether the eventTypeId field is set.
     */
    boolean hasEventTypeId();
    /**
     * <pre>
     * An index in meta_info.event_type, shows which event type current sample belongs to.
     * </pre>
     *
     * <code>optional uint32 event_type_id = 5;</code>
     * @return The eventTypeId.
     */
    int getEventTypeId();

    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     * @return Whether the unwindingResult field is set.
     */
    boolean hasUnwindingResult();
    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     * @return The unwindingResult.
     */
    simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getUnwindingResult();
    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder getUnwindingResultOrBuilder();
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.Sample}
   */
  public static final class Sample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.Sample)
      SampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sample.newBuilder() to construct.
    private Sample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sample() {
      callchain_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Sample();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Sample(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              threadId_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                callchain_ = new java.util.ArrayList<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry>();
                mutable_bitField0_ |= 0x00000004;
              }
              callchain_.add(
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              eventCount_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              eventTypeId_ = input.readUInt32();
              break;
            }
            case 50: {
              simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = unwindingResult_.toBuilder();
              }
              unwindingResult_ = input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unwindingResult_);
                unwindingResult_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          callchain_ = java.util.Collections.unmodifiableList(callchain_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.Sample.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder.class);
    }

    public interface CallChainEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.Sample.CallChainEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * virtual address of the instruction in elf file
       * </pre>
       *
       * <code>optional uint64 vaddr_in_file = 1;</code>
       * @return Whether the vaddrInFile field is set.
       */
      boolean hasVaddrInFile();
      /**
       * <pre>
       * virtual address of the instruction in elf file
       * </pre>
       *
       * <code>optional uint64 vaddr_in_file = 1;</code>
       * @return The vaddrInFile.
       */
      long getVaddrInFile();

      /**
       * <pre>
       * index of the elf file containing the instruction
       * </pre>
       *
       * <code>optional uint32 file_id = 2;</code>
       * @return Whether the fileId field is set.
       */
      boolean hasFileId();
      /**
       * <pre>
       * index of the elf file containing the instruction
       * </pre>
       *
       * <code>optional uint32 file_id = 2;</code>
       * @return The fileId.
       */
      int getFileId();

      /**
       * <pre>
       * symbol_id refers to the name of the function containing the instruction.
       * If the function name is found, it is a valid index in the symbol table
       * of File with 'id' field being file_id, otherwise it is -1.
       * </pre>
       *
       * <code>optional int32 symbol_id = 3;</code>
       * @return Whether the symbolId field is set.
       */
      boolean hasSymbolId();
      /**
       * <pre>
       * symbol_id refers to the name of the function containing the instruction.
       * If the function name is found, it is a valid index in the symbol table
       * of File with 'id' field being file_id, otherwise it is -1.
       * </pre>
       *
       * <code>optional int32 symbol_id = 3;</code>
       * @return The symbolId.
       */
      int getSymbolId();

      /**
       * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
       * @return Whether the executionType field is set.
       */
      boolean hasExecutionType();
      /**
       * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
       * @return The executionType.
       */
      simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType getExecutionType();
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.Sample.CallChainEntry}
     */
    public static final class CallChainEntry extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:simpleperf_report_proto.Sample.CallChainEntry)
        CallChainEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CallChainEntry.newBuilder() to construct.
      private CallChainEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CallChainEntry() {
        executionType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CallChainEntry();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CallChainEntry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                vaddrInFile_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                fileId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                symbolId_ = input.readInt32();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType value = simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  executionType_ = rawValue;
                }
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_CallChainEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder.class);
      }

      /**
       * Protobuf enum {@code simpleperf_report_proto.Sample.CallChainEntry.ExecutionType}
       */
      public enum ExecutionType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * methods belong to native libraries, AOT compiled JVM code and ART methods not used near
         * JVM methods
         * </pre>
         *
         * <code>NATIVE_METHOD = 0;</code>
         */
        NATIVE_METHOD(0),
        /**
         * <code>INTERPRETED_JVM_METHOD = 1;</code>
         */
        INTERPRETED_JVM_METHOD(1),
        /**
         * <code>JIT_JVM_METHOD = 2;</code>
         */
        JIT_JVM_METHOD(2),
        /**
         * <pre>
         * ART methods used near JVM methods. It's shown only when --show-art-frames is used.
         * </pre>
         *
         * <code>ART_METHOD = 3;</code>
         */
        ART_METHOD(3),
        ;

        /**
         * <pre>
         * methods belong to native libraries, AOT compiled JVM code and ART methods not used near
         * JVM methods
         * </pre>
         *
         * <code>NATIVE_METHOD = 0;</code>
         */
        public static final int NATIVE_METHOD_VALUE = 0;
        /**
         * <code>INTERPRETED_JVM_METHOD = 1;</code>
         */
        public static final int INTERPRETED_JVM_METHOD_VALUE = 1;
        /**
         * <code>JIT_JVM_METHOD = 2;</code>
         */
        public static final int JIT_JVM_METHOD_VALUE = 2;
        /**
         * <pre>
         * ART methods used near JVM methods. It's shown only when --show-art-frames is used.
         * </pre>
         *
         * <code>ART_METHOD = 3;</code>
         */
        public static final int ART_METHOD_VALUE = 3;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ExecutionType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ExecutionType forNumber(int value) {
          switch (value) {
            case 0: return NATIVE_METHOD;
            case 1: return INTERPRETED_JVM_METHOD;
            case 2: return JIT_JVM_METHOD;
            case 3: return ART_METHOD;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ExecutionType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ExecutionType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ExecutionType>() {
                public ExecutionType findValueByNumber(int number) {
                  return ExecutionType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.getDescriptor().getEnumTypes().get(0);
        }

        private static final ExecutionType[] VALUES = values();

        public static ExecutionType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ExecutionType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:simpleperf_report_proto.Sample.CallChainEntry.ExecutionType)
      }

      private int bitField0_;
      public static final int VADDR_IN_FILE_FIELD_NUMBER = 1;
      private long vaddrInFile_;
      /**
       * <pre>
       * virtual address of the instruction in elf file
       * </pre>
       *
       * <code>optional uint64 vaddr_in_file = 1;</code>
       * @return Whether the vaddrInFile field is set.
       */
      @java.lang.Override
      public boolean hasVaddrInFile() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * virtual address of the instruction in elf file
       * </pre>
       *
       * <code>optional uint64 vaddr_in_file = 1;</code>
       * @return The vaddrInFile.
       */
      @java.lang.Override
      public long getVaddrInFile() {
        return vaddrInFile_;
      }

      public static final int FILE_ID_FIELD_NUMBER = 2;
      private int fileId_;
      /**
       * <pre>
       * index of the elf file containing the instruction
       * </pre>
       *
       * <code>optional uint32 file_id = 2;</code>
       * @return Whether the fileId field is set.
       */
      @java.lang.Override
      public boolean hasFileId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * index of the elf file containing the instruction
       * </pre>
       *
       * <code>optional uint32 file_id = 2;</code>
       * @return The fileId.
       */
      @java.lang.Override
      public int getFileId() {
        return fileId_;
      }

      public static final int SYMBOL_ID_FIELD_NUMBER = 3;
      private int symbolId_;
      /**
       * <pre>
       * symbol_id refers to the name of the function containing the instruction.
       * If the function name is found, it is a valid index in the symbol table
       * of File with 'id' field being file_id, otherwise it is -1.
       * </pre>
       *
       * <code>optional int32 symbol_id = 3;</code>
       * @return Whether the symbolId field is set.
       */
      @java.lang.Override
      public boolean hasSymbolId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * symbol_id refers to the name of the function containing the instruction.
       * If the function name is found, it is a valid index in the symbol table
       * of File with 'id' field being file_id, otherwise it is -1.
       * </pre>
       *
       * <code>optional int32 symbol_id = 3;</code>
       * @return The symbolId.
       */
      @java.lang.Override
      public int getSymbolId() {
        return symbolId_;
      }

      public static final int EXECUTION_TYPE_FIELD_NUMBER = 4;
      private int executionType_;
      /**
       * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
       * @return Whether the executionType field is set.
       */
      @java.lang.Override public boolean hasExecutionType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
       * @return The executionType.
       */
      @java.lang.Override public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType getExecutionType() {
        @SuppressWarnings("deprecation")
        simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType result = simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType.valueOf(executionType_);
        return result == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType.NATIVE_METHOD : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, vaddrInFile_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, fileId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, symbolId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeEnum(4, executionType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, vaddrInFile_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, fileId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, symbolId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, executionType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry)) {
          return super.equals(obj);
        }
        simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry other = (simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry) obj;

        if (hasVaddrInFile() != other.hasVaddrInFile()) return false;
        if (hasVaddrInFile()) {
          if (getVaddrInFile()
              != other.getVaddrInFile()) return false;
        }
        if (hasFileId() != other.hasFileId()) return false;
        if (hasFileId()) {
          if (getFileId()
              != other.getFileId()) return false;
        }
        if (hasSymbolId() != other.hasSymbolId()) return false;
        if (hasSymbolId()) {
          if (getSymbolId()
              != other.getSymbolId()) return false;
        }
        if (hasExecutionType() != other.hasExecutionType()) return false;
        if (hasExecutionType()) {
          if (executionType_ != other.executionType_) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasVaddrInFile()) {
          hash = (37 * hash) + VADDR_IN_FILE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getVaddrInFile());
        }
        if (hasFileId()) {
          hash = (37 * hash) + FILE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getFileId();
        }
        if (hasSymbolId()) {
          hash = (37 * hash) + SYMBOL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSymbolId();
        }
        if (hasExecutionType()) {
          hash = (37 * hash) + EXECUTION_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + executionType_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code simpleperf_report_proto.Sample.CallChainEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.Sample.CallChainEntry)
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_CallChainEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder.class);
        }

        // Construct using simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          vaddrInFile_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          fileId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          symbolId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          executionType_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor;
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getDefaultInstanceForType() {
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.getDefaultInstance();
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry build() {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry buildPartial() {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry result = new simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.vaddrInFile_ = vaddrInFile_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.fileId_ = fileId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.symbolId_ = symbolId_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.executionType_ = executionType_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry) {
            return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry other) {
          if (other == simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.getDefaultInstance()) return this;
          if (other.hasVaddrInFile()) {
            setVaddrInFile(other.getVaddrInFile());
          }
          if (other.hasFileId()) {
            setFileId(other.getFileId());
          }
          if (other.hasSymbolId()) {
            setSymbolId(other.getSymbolId());
          }
          if (other.hasExecutionType()) {
            setExecutionType(other.getExecutionType());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long vaddrInFile_ ;
        /**
         * <pre>
         * virtual address of the instruction in elf file
         * </pre>
         *
         * <code>optional uint64 vaddr_in_file = 1;</code>
         * @return Whether the vaddrInFile field is set.
         */
        @java.lang.Override
        public boolean hasVaddrInFile() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * virtual address of the instruction in elf file
         * </pre>
         *
         * <code>optional uint64 vaddr_in_file = 1;</code>
         * @return The vaddrInFile.
         */
        @java.lang.Override
        public long getVaddrInFile() {
          return vaddrInFile_;
        }
        /**
         * <pre>
         * virtual address of the instruction in elf file
         * </pre>
         *
         * <code>optional uint64 vaddr_in_file = 1;</code>
         * @param value The vaddrInFile to set.
         * @return This builder for chaining.
         */
        public Builder setVaddrInFile(long value) {
          bitField0_ |= 0x00000001;
          vaddrInFile_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * virtual address of the instruction in elf file
         * </pre>
         *
         * <code>optional uint64 vaddr_in_file = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearVaddrInFile() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vaddrInFile_ = 0L;
          onChanged();
          return this;
        }

        private int fileId_ ;
        /**
         * <pre>
         * index of the elf file containing the instruction
         * </pre>
         *
         * <code>optional uint32 file_id = 2;</code>
         * @return Whether the fileId field is set.
         */
        @java.lang.Override
        public boolean hasFileId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * index of the elf file containing the instruction
         * </pre>
         *
         * <code>optional uint32 file_id = 2;</code>
         * @return The fileId.
         */
        @java.lang.Override
        public int getFileId() {
          return fileId_;
        }
        /**
         * <pre>
         * index of the elf file containing the instruction
         * </pre>
         *
         * <code>optional uint32 file_id = 2;</code>
         * @param value The fileId to set.
         * @return This builder for chaining.
         */
        public Builder setFileId(int value) {
          bitField0_ |= 0x00000002;
          fileId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * index of the elf file containing the instruction
         * </pre>
         *
         * <code>optional uint32 file_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFileId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fileId_ = 0;
          onChanged();
          return this;
        }

        private int symbolId_ ;
        /**
         * <pre>
         * symbol_id refers to the name of the function containing the instruction.
         * If the function name is found, it is a valid index in the symbol table
         * of File with 'id' field being file_id, otherwise it is -1.
         * </pre>
         *
         * <code>optional int32 symbol_id = 3;</code>
         * @return Whether the symbolId field is set.
         */
        @java.lang.Override
        public boolean hasSymbolId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * symbol_id refers to the name of the function containing the instruction.
         * If the function name is found, it is a valid index in the symbol table
         * of File with 'id' field being file_id, otherwise it is -1.
         * </pre>
         *
         * <code>optional int32 symbol_id = 3;</code>
         * @return The symbolId.
         */
        @java.lang.Override
        public int getSymbolId() {
          return symbolId_;
        }
        /**
         * <pre>
         * symbol_id refers to the name of the function containing the instruction.
         * If the function name is found, it is a valid index in the symbol table
         * of File with 'id' field being file_id, otherwise it is -1.
         * </pre>
         *
         * <code>optional int32 symbol_id = 3;</code>
         * @param value The symbolId to set.
         * @return This builder for chaining.
         */
        public Builder setSymbolId(int value) {
          bitField0_ |= 0x00000004;
          symbolId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * symbol_id refers to the name of the function containing the instruction.
         * If the function name is found, it is a valid index in the symbol table
         * of File with 'id' field being file_id, otherwise it is -1.
         * </pre>
         *
         * <code>optional int32 symbol_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSymbolId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          symbolId_ = 0;
          onChanged();
          return this;
        }

        private int executionType_ = 0;
        /**
         * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
         * @return Whether the executionType field is set.
         */
        @java.lang.Override public boolean hasExecutionType() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
         * @return The executionType.
         */
        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType getExecutionType() {
          @SuppressWarnings("deprecation")
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType result = simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType.valueOf(executionType_);
          return result == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType.NATIVE_METHOD : result;
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
         * @param value The executionType to set.
         * @return This builder for chaining.
         */
        public Builder setExecutionType(simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.ExecutionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          executionType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.CallChainEntry.ExecutionType execution_type = 4 [default = NATIVE_METHOD];</code>
         * @return This builder for chaining.
         */
        public Builder clearExecutionType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          executionType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.Sample.CallChainEntry)
      }

      // @@protoc_insertion_point(class_scope:simpleperf_report_proto.Sample.CallChainEntry)
      private static final simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry();
      }

      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CallChainEntry>
          PARSER = new com.google.protobuf.AbstractParser<CallChainEntry>() {
        @java.lang.Override
        public CallChainEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CallChainEntry(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CallChainEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CallChainEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UnwindingResultOrBuilder extends
        // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.Sample.UnwindingResult)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * error code provided by libunwindstack, in
       * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
       * </pre>
       *
       * <code>optional uint32 raw_error_code = 1;</code>
       * @return Whether the rawErrorCode field is set.
       */
      boolean hasRawErrorCode();
      /**
       * <pre>
       * error code provided by libunwindstack, in
       * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
       * </pre>
       *
       * <code>optional uint32 raw_error_code = 1;</code>
       * @return The rawErrorCode.
       */
      int getRawErrorCode();

      /**
       * <pre>
       * error addr provided by libunwindstack
       * </pre>
       *
       * <code>optional uint64 error_addr = 2;</code>
       * @return Whether the errorAddr field is set.
       */
      boolean hasErrorAddr();
      /**
       * <pre>
       * error addr provided by libunwindstack
       * </pre>
       *
       * <code>optional uint64 error_addr = 2;</code>
       * @return The errorAddr.
       */
      long getErrorAddr();

      /**
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
       * @return Whether the errorCode field is set.
       */
      boolean hasErrorCode();
      /**
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
       * @return The errorCode.
       */
      simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode getErrorCode();
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.Sample.UnwindingResult}
     */
    public static final class UnwindingResult extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:simpleperf_report_proto.Sample.UnwindingResult)
        UnwindingResultOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UnwindingResult.newBuilder() to construct.
      private UnwindingResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UnwindingResult() {
        errorCode_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new UnwindingResult();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UnwindingResult(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                rawErrorCode_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                errorAddr_ = input.readUInt64();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode value = simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  errorCode_ = rawValue;
                }
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_UnwindingResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder.class);
      }

      /**
       * <pre>
       * error code interpreted by simpleperf
       * </pre>
       *
       * Protobuf enum {@code simpleperf_report_proto.Sample.UnwindingResult.ErrorCode}
       */
      public enum ErrorCode
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * No error
         * </pre>
         *
         * <code>ERROR_NONE = 0;</code>
         */
        ERROR_NONE(0),
        /**
         * <pre>
         * Error not interpreted by simpleperf, see raw_error_code
         * </pre>
         *
         * <code>ERROR_UNKNOWN = 1;</code>
         */
        ERROR_UNKNOWN(1),
        /**
         * <pre>
         * Simpleperf doesn't record enough stack data
         * </pre>
         *
         * <code>ERROR_NOT_ENOUGH_STACK = 2;</code>
         */
        ERROR_NOT_ENOUGH_STACK(2),
        /**
         * <pre>
         * Memory read failed
         * </pre>
         *
         * <code>ERROR_MEMORY_INVALID = 3;</code>
         */
        ERROR_MEMORY_INVALID(3),
        /**
         * <pre>
         * No debug info in binary to support unwinding
         * </pre>
         *
         * <code>ERROR_UNWIND_INFO = 4;</code>
         */
        ERROR_UNWIND_INFO(4),
        /**
         * <pre>
         * Unwind in an invalid map
         * </pre>
         *
         * <code>ERROR_INVALID_MAP = 5;</code>
         */
        ERROR_INVALID_MAP(5),
        /**
         * <pre>
         * Stopped at MAX_UNWINDING_FRAMES, which is 512.
         * </pre>
         *
         * <code>ERROR_MAX_FRAME_EXCEEDED = 6;</code>
         */
        ERROR_MAX_FRAME_EXCEEDED(6),
        /**
         * <pre>
         * The last frame has the same pc/sp as the next.
         * </pre>
         *
         * <code>ERROR_REPEATED_FRAME = 7;</code>
         */
        ERROR_REPEATED_FRAME(7),
        /**
         * <pre>
         * Unwind in an invalid elf file
         * </pre>
         *
         * <code>ERROR_INVALID_ELF = 8;</code>
         */
        ERROR_INVALID_ELF(8),
        ;

        /**
         * <pre>
         * No error
         * </pre>
         *
         * <code>ERROR_NONE = 0;</code>
         */
        public static final int ERROR_NONE_VALUE = 0;
        /**
         * <pre>
         * Error not interpreted by simpleperf, see raw_error_code
         * </pre>
         *
         * <code>ERROR_UNKNOWN = 1;</code>
         */
        public static final int ERROR_UNKNOWN_VALUE = 1;
        /**
         * <pre>
         * Simpleperf doesn't record enough stack data
         * </pre>
         *
         * <code>ERROR_NOT_ENOUGH_STACK = 2;</code>
         */
        public static final int ERROR_NOT_ENOUGH_STACK_VALUE = 2;
        /**
         * <pre>
         * Memory read failed
         * </pre>
         *
         * <code>ERROR_MEMORY_INVALID = 3;</code>
         */
        public static final int ERROR_MEMORY_INVALID_VALUE = 3;
        /**
         * <pre>
         * No debug info in binary to support unwinding
         * </pre>
         *
         * <code>ERROR_UNWIND_INFO = 4;</code>
         */
        public static final int ERROR_UNWIND_INFO_VALUE = 4;
        /**
         * <pre>
         * Unwind in an invalid map
         * </pre>
         *
         * <code>ERROR_INVALID_MAP = 5;</code>
         */
        public static final int ERROR_INVALID_MAP_VALUE = 5;
        /**
         * <pre>
         * Stopped at MAX_UNWINDING_FRAMES, which is 512.
         * </pre>
         *
         * <code>ERROR_MAX_FRAME_EXCEEDED = 6;</code>
         */
        public static final int ERROR_MAX_FRAME_EXCEEDED_VALUE = 6;
        /**
         * <pre>
         * The last frame has the same pc/sp as the next.
         * </pre>
         *
         * <code>ERROR_REPEATED_FRAME = 7;</code>
         */
        public static final int ERROR_REPEATED_FRAME_VALUE = 7;
        /**
         * <pre>
         * Unwind in an invalid elf file
         * </pre>
         *
         * <code>ERROR_INVALID_ELF = 8;</code>
         */
        public static final int ERROR_INVALID_ELF_VALUE = 8;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ErrorCode valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ErrorCode forNumber(int value) {
          switch (value) {
            case 0: return ERROR_NONE;
            case 1: return ERROR_UNKNOWN;
            case 2: return ERROR_NOT_ENOUGH_STACK;
            case 3: return ERROR_MEMORY_INVALID;
            case 4: return ERROR_UNWIND_INFO;
            case 5: return ERROR_INVALID_MAP;
            case 6: return ERROR_MAX_FRAME_EXCEEDED;
            case 7: return ERROR_REPEATED_FRAME;
            case 8: return ERROR_INVALID_ELF;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ErrorCode> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
                public ErrorCode findValueByNumber(int number) {
                  return ErrorCode.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDescriptor().getEnumTypes().get(0);
        }

        private static final ErrorCode[] VALUES = values();

        public static ErrorCode valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ErrorCode(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:simpleperf_report_proto.Sample.UnwindingResult.ErrorCode)
      }

      private int bitField0_;
      public static final int RAW_ERROR_CODE_FIELD_NUMBER = 1;
      private int rawErrorCode_;
      /**
       * <pre>
       * error code provided by libunwindstack, in
       * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
       * </pre>
       *
       * <code>optional uint32 raw_error_code = 1;</code>
       * @return Whether the rawErrorCode field is set.
       */
      @java.lang.Override
      public boolean hasRawErrorCode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * error code provided by libunwindstack, in
       * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
       * </pre>
       *
       * <code>optional uint32 raw_error_code = 1;</code>
       * @return The rawErrorCode.
       */
      @java.lang.Override
      public int getRawErrorCode() {
        return rawErrorCode_;
      }

      public static final int ERROR_ADDR_FIELD_NUMBER = 2;
      private long errorAddr_;
      /**
       * <pre>
       * error addr provided by libunwindstack
       * </pre>
       *
       * <code>optional uint64 error_addr = 2;</code>
       * @return Whether the errorAddr field is set.
       */
      @java.lang.Override
      public boolean hasErrorAddr() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * error addr provided by libunwindstack
       * </pre>
       *
       * <code>optional uint64 error_addr = 2;</code>
       * @return The errorAddr.
       */
      @java.lang.Override
      public long getErrorAddr() {
        return errorAddr_;
      }

      public static final int ERROR_CODE_FIELD_NUMBER = 3;
      private int errorCode_;
      /**
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
       * @return Whether the errorCode field is set.
       */
      @java.lang.Override public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
       * @return The errorCode.
       */
      @java.lang.Override public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode getErrorCode() {
        @SuppressWarnings("deprecation")
        simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode result = simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode.valueOf(errorCode_);
        return result == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode.ERROR_NONE : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, rawErrorCode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, errorAddr_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeEnum(3, errorCode_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, rawErrorCode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, errorAddr_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, errorCode_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult)) {
          return super.equals(obj);
        }
        simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult other = (simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult) obj;

        if (hasRawErrorCode() != other.hasRawErrorCode()) return false;
        if (hasRawErrorCode()) {
          if (getRawErrorCode()
              != other.getRawErrorCode()) return false;
        }
        if (hasErrorAddr() != other.hasErrorAddr()) return false;
        if (hasErrorAddr()) {
          if (getErrorAddr()
              != other.getErrorAddr()) return false;
        }
        if (hasErrorCode() != other.hasErrorCode()) return false;
        if (hasErrorCode()) {
          if (errorCode_ != other.errorCode_) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRawErrorCode()) {
          hash = (37 * hash) + RAW_ERROR_CODE_FIELD_NUMBER;
          hash = (53 * hash) + getRawErrorCode();
        }
        if (hasErrorAddr()) {
          hash = (37 * hash) + ERROR_ADDR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getErrorAddr());
        }
        if (hasErrorCode()) {
          hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
          hash = (53 * hash) + errorCode_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code simpleperf_report_proto.Sample.UnwindingResult}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.Sample.UnwindingResult)
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_UnwindingResult_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder.class);
        }

        // Construct using simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rawErrorCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          errorAddr_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          errorCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor;
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getDefaultInstanceForType() {
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance();
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult build() {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult buildPartial() {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult result = new simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rawErrorCode_ = rawErrorCode_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.errorAddr_ = errorAddr_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000004;
          }
          result.errorCode_ = errorCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult) {
            return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult other) {
          if (other == simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance()) return this;
          if (other.hasRawErrorCode()) {
            setRawErrorCode(other.getRawErrorCode());
          }
          if (other.hasErrorAddr()) {
            setErrorAddr(other.getErrorAddr());
          }
          if (other.hasErrorCode()) {
            setErrorCode(other.getErrorCode());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int rawErrorCode_ ;
        /**
         * <pre>
         * error code provided by libunwindstack, in
         * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
         * </pre>
         *
         * <code>optional uint32 raw_error_code = 1;</code>
         * @return Whether the rawErrorCode field is set.
         */
        @java.lang.Override
        public boolean hasRawErrorCode() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * error code provided by libunwindstack, in
         * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
         * </pre>
         *
         * <code>optional uint32 raw_error_code = 1;</code>
         * @return The rawErrorCode.
         */
        @java.lang.Override
        public int getRawErrorCode() {
          return rawErrorCode_;
        }
        /**
         * <pre>
         * error code provided by libunwindstack, in
         * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
         * </pre>
         *
         * <code>optional uint32 raw_error_code = 1;</code>
         * @param value The rawErrorCode to set.
         * @return This builder for chaining.
         */
        public Builder setRawErrorCode(int value) {
          bitField0_ |= 0x00000001;
          rawErrorCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * error code provided by libunwindstack, in
         * https://cs.android.com/android/platform/superproject/+/master:system/unwinding/libunwindstack/include/unwindstack/Error.h
         * </pre>
         *
         * <code>optional uint32 raw_error_code = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRawErrorCode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rawErrorCode_ = 0;
          onChanged();
          return this;
        }

        private long errorAddr_ ;
        /**
         * <pre>
         * error addr provided by libunwindstack
         * </pre>
         *
         * <code>optional uint64 error_addr = 2;</code>
         * @return Whether the errorAddr field is set.
         */
        @java.lang.Override
        public boolean hasErrorAddr() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * error addr provided by libunwindstack
         * </pre>
         *
         * <code>optional uint64 error_addr = 2;</code>
         * @return The errorAddr.
         */
        @java.lang.Override
        public long getErrorAddr() {
          return errorAddr_;
        }
        /**
         * <pre>
         * error addr provided by libunwindstack
         * </pre>
         *
         * <code>optional uint64 error_addr = 2;</code>
         * @param value The errorAddr to set.
         * @return This builder for chaining.
         */
        public Builder setErrorAddr(long value) {
          bitField0_ |= 0x00000002;
          errorAddr_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * error addr provided by libunwindstack
         * </pre>
         *
         * <code>optional uint64 error_addr = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearErrorAddr() {
          bitField0_ = (bitField0_ & ~0x00000002);
          errorAddr_ = 0L;
          onChanged();
          return this;
        }

        private int errorCode_ = 0;
        /**
         * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
         * @return Whether the errorCode field is set.
         */
        @java.lang.Override public boolean hasErrorCode() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
         * @return The errorCode.
         */
        @java.lang.Override
        public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode getErrorCode() {
          @SuppressWarnings("deprecation")
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode result = simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode.valueOf(errorCode_);
          return result == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode.ERROR_NONE : result;
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
         * @param value The errorCode to set.
         * @return This builder for chaining.
         */
        public Builder setErrorCode(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.ErrorCode value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          errorCode_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .simpleperf_report_proto.Sample.UnwindingResult.ErrorCode error_code = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearErrorCode() {
          bitField0_ = (bitField0_ & ~0x00000004);
          errorCode_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.Sample.UnwindingResult)
      }

      // @@protoc_insertion_point(class_scope:simpleperf_report_proto.Sample.UnwindingResult)
      private static final simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult();
      }

      public static simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<UnwindingResult>
          PARSER = new com.google.protobuf.AbstractParser<UnwindingResult>() {
        @java.lang.Override
        public UnwindingResult parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UnwindingResult(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UnwindingResult> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UnwindingResult> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 1;</code>
     * @return Whether the time field is set.
     */
    @java.lang.Override
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 1;</code>
     * @return The time.
     */
    @java.lang.Override
    public long getTime() {
      return time_;
    }

    public static final int THREAD_ID_FIELD_NUMBER = 2;
    private int threadId_;
    /**
     * <code>optional int32 thread_id = 2;</code>
     * @return Whether the threadId field is set.
     */
    @java.lang.Override
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 thread_id = 2;</code>
     * @return The threadId.
     */
    @java.lang.Override
    public int getThreadId() {
      return threadId_;
    }

    public static final int CALLCHAIN_FIELD_NUMBER = 3;
    private java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry> callchain_;
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    @java.lang.Override
    public java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry> getCallchainList() {
      return callchain_;
    }
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder>
        getCallchainOrBuilderList() {
      return callchain_;
    }
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    @java.lang.Override
    public int getCallchainCount() {
      return callchain_.size();
    }
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getCallchain(int index) {
      return callchain_.get(index);
    }
    /**
     * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder getCallchainOrBuilder(
        int index) {
      return callchain_.get(index);
    }

    public static final int EVENT_COUNT_FIELD_NUMBER = 4;
    private long eventCount_;
    /**
     * <pre>
     * Simpleperf generates one sample whenever a specified amount of events happen
     * while running a monitored thread. So each sample belongs to one event type.
     * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
     * By using '-e' option, we can ask simpleperf to record samples for one or more
     * event types.
     * Each event type generates samples independently. But recording more event types
     * will cost more cpu time generating samples, which may affect the monitored threads
     * and sample lost rate.
     * event_count field shows the count of the events (belong to the sample's event type)
     * that have happened since last sample (belong to the sample's event type) for the
     * same thread. However, if there are lost samples between current sample and previous
     * sample, the event_count is the count of events from the last lost sample.
     * </pre>
     *
     * <code>optional uint64 event_count = 4;</code>
     * @return Whether the eventCount field is set.
     */
    @java.lang.Override
    public boolean hasEventCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Simpleperf generates one sample whenever a specified amount of events happen
     * while running a monitored thread. So each sample belongs to one event type.
     * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
     * By using '-e' option, we can ask simpleperf to record samples for one or more
     * event types.
     * Each event type generates samples independently. But recording more event types
     * will cost more cpu time generating samples, which may affect the monitored threads
     * and sample lost rate.
     * event_count field shows the count of the events (belong to the sample's event type)
     * that have happened since last sample (belong to the sample's event type) for the
     * same thread. However, if there are lost samples between current sample and previous
     * sample, the event_count is the count of events from the last lost sample.
     * </pre>
     *
     * <code>optional uint64 event_count = 4;</code>
     * @return The eventCount.
     */
    @java.lang.Override
    public long getEventCount() {
      return eventCount_;
    }

    public static final int EVENT_TYPE_ID_FIELD_NUMBER = 5;
    private int eventTypeId_;
    /**
     * <pre>
     * An index in meta_info.event_type, shows which event type current sample belongs to.
     * </pre>
     *
     * <code>optional uint32 event_type_id = 5;</code>
     * @return Whether the eventTypeId field is set.
     */
    @java.lang.Override
    public boolean hasEventTypeId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * An index in meta_info.event_type, shows which event type current sample belongs to.
     * </pre>
     *
     * <code>optional uint32 event_type_id = 5;</code>
     * @return The eventTypeId.
     */
    @java.lang.Override
    public int getEventTypeId() {
      return eventTypeId_;
    }

    public static final int UNWINDING_RESULT_FIELD_NUMBER = 6;
    private simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult unwindingResult_;
    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     * @return Whether the unwindingResult field is set.
     */
    @java.lang.Override
    public boolean hasUnwindingResult() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     * @return The unwindingResult.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getUnwindingResult() {
      return unwindingResult_ == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance() : unwindingResult_;
    }
    /**
     * <pre>
     * Unwinding result is provided for samples without a complete callchain, when recorded with
     * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
     * </pre>
     *
     * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder getUnwindingResultOrBuilder() {
      return unwindingResult_ == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance() : unwindingResult_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, threadId_);
      }
      for (int i = 0; i < callchain_.size(); i++) {
        output.writeMessage(3, callchain_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(4, eventCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(5, eventTypeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getUnwindingResult());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, threadId_);
      }
      for (int i = 0; i < callchain_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, callchain_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, eventCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, eventTypeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUnwindingResult());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.Sample other = (simpleperf.cleanup.proto.SimpleperfReport.Sample) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasThreadId() != other.hasThreadId()) return false;
      if (hasThreadId()) {
        if (getThreadId()
            != other.getThreadId()) return false;
      }
      if (!getCallchainList()
          .equals(other.getCallchainList())) return false;
      if (hasEventCount() != other.hasEventCount()) return false;
      if (hasEventCount()) {
        if (getEventCount()
            != other.getEventCount()) return false;
      }
      if (hasEventTypeId() != other.hasEventTypeId()) return false;
      if (hasEventTypeId()) {
        if (getEventTypeId()
            != other.getEventTypeId()) return false;
      }
      if (hasUnwindingResult() != other.hasUnwindingResult()) return false;
      if (hasUnwindingResult()) {
        if (!getUnwindingResult()
            .equals(other.getUnwindingResult())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTime());
      }
      if (hasThreadId()) {
        hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getThreadId();
      }
      if (getCallchainCount() > 0) {
        hash = (37 * hash) + CALLCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getCallchainList().hashCode();
      }
      if (hasEventCount()) {
        hash = (37 * hash) + EVENT_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEventCount());
      }
      if (hasEventTypeId()) {
        hash = (37 * hash) + EVENT_TYPE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getEventTypeId();
      }
      if (hasUnwindingResult()) {
        hash = (37 * hash) + UNWINDING_RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getUnwindingResult().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Sample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.Sample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.Sample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.Sample)
        simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.Sample.class, simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.Sample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCallchainFieldBuilder();
          getUnwindingResultFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (callchainBuilder_ == null) {
          callchain_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          callchainBuilder_.clear();
        }
        eventCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventTypeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (unwindingResultBuilder_ == null) {
          unwindingResult_ = null;
        } else {
          unwindingResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Sample_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample build() {
        simpleperf.cleanup.proto.SimpleperfReport.Sample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.Sample result = new simpleperf.cleanup.proto.SimpleperfReport.Sample(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.threadId_ = threadId_;
          to_bitField0_ |= 0x00000002;
        }
        if (callchainBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            callchain_ = java.util.Collections.unmodifiableList(callchain_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.callchain_ = callchain_;
        } else {
          result.callchain_ = callchainBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.eventCount_ = eventCount_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.eventTypeId_ = eventTypeId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (unwindingResultBuilder_ == null) {
            result.unwindingResult_ = unwindingResult_;
          } else {
            result.unwindingResult_ = unwindingResultBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.Sample) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Sample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.Sample other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (callchainBuilder_ == null) {
          if (!other.callchain_.isEmpty()) {
            if (callchain_.isEmpty()) {
              callchain_ = other.callchain_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCallchainIsMutable();
              callchain_.addAll(other.callchain_);
            }
            onChanged();
          }
        } else {
          if (!other.callchain_.isEmpty()) {
            if (callchainBuilder_.isEmpty()) {
              callchainBuilder_.dispose();
              callchainBuilder_ = null;
              callchain_ = other.callchain_;
              bitField0_ = (bitField0_ & ~0x00000004);
              callchainBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCallchainFieldBuilder() : null;
            } else {
              callchainBuilder_.addAllMessages(other.callchain_);
            }
          }
        }
        if (other.hasEventCount()) {
          setEventCount(other.getEventCount());
        }
        if (other.hasEventTypeId()) {
          setEventTypeId(other.getEventTypeId());
        }
        if (other.hasUnwindingResult()) {
          mergeUnwindingResult(other.getUnwindingResult());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.Sample parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.Sample) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 1;</code>
       * @return Whether the time field is set.
       */
      @java.lang.Override
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 1;</code>
       * @return The time.
       */
      @java.lang.Override
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 1;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int threadId_ ;
      /**
       * <code>optional int32 thread_id = 2;</code>
       * @return Whether the threadId field is set.
       */
      @java.lang.Override
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 thread_id = 2;</code>
       * @return The threadId.
       */
      @java.lang.Override
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>optional int32 thread_id = 2;</code>
       * @param value The threadId to set.
       * @return This builder for chaining.
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000002;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 thread_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        threadId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry> callchain_ =
        java.util.Collections.emptyList();
      private void ensureCallchainIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          callchain_ = new java.util.ArrayList<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry>(callchain_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder> callchainBuilder_;

      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry> getCallchainList() {
        if (callchainBuilder_ == null) {
          return java.util.Collections.unmodifiableList(callchain_);
        } else {
          return callchainBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public int getCallchainCount() {
        if (callchainBuilder_ == null) {
          return callchain_.size();
        } else {
          return callchainBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry getCallchain(int index) {
        if (callchainBuilder_ == null) {
          return callchain_.get(index);
        } else {
          return callchainBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder setCallchain(
          int index, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry value) {
        if (callchainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallchainIsMutable();
          callchain_.set(index, value);
          onChanged();
        } else {
          callchainBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder setCallchain(
          int index, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder builderForValue) {
        if (callchainBuilder_ == null) {
          ensureCallchainIsMutable();
          callchain_.set(index, builderForValue.build());
          onChanged();
        } else {
          callchainBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder addCallchain(simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry value) {
        if (callchainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallchainIsMutable();
          callchain_.add(value);
          onChanged();
        } else {
          callchainBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder addCallchain(
          int index, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry value) {
        if (callchainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallchainIsMutable();
          callchain_.add(index, value);
          onChanged();
        } else {
          callchainBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder addCallchain(
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder builderForValue) {
        if (callchainBuilder_ == null) {
          ensureCallchainIsMutable();
          callchain_.add(builderForValue.build());
          onChanged();
        } else {
          callchainBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder addCallchain(
          int index, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder builderForValue) {
        if (callchainBuilder_ == null) {
          ensureCallchainIsMutable();
          callchain_.add(index, builderForValue.build());
          onChanged();
        } else {
          callchainBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder addAllCallchain(
          java.lang.Iterable<? extends simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry> values) {
        if (callchainBuilder_ == null) {
          ensureCallchainIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, callchain_);
          onChanged();
        } else {
          callchainBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder clearCallchain() {
        if (callchainBuilder_ == null) {
          callchain_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          callchainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public Builder removeCallchain(int index) {
        if (callchainBuilder_ == null) {
          ensureCallchainIsMutable();
          callchain_.remove(index);
          onChanged();
        } else {
          callchainBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder getCallchainBuilder(
          int index) {
        return getCallchainFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder getCallchainOrBuilder(
          int index) {
        if (callchainBuilder_ == null) {
          return callchain_.get(index);  } else {
          return callchainBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public java.util.List<? extends simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder>
           getCallchainOrBuilderList() {
        if (callchainBuilder_ != null) {
          return callchainBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(callchain_);
        }
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder addCallchainBuilder() {
        return getCallchainFieldBuilder().addBuilder(
            simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder addCallchainBuilder(
          int index) {
        return getCallchainFieldBuilder().addBuilder(
            index, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .simpleperf_report_proto.Sample.CallChainEntry callchain = 3;</code>
       */
      public java.util.List<simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder>
           getCallchainBuilderList() {
        return getCallchainFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder>
          getCallchainFieldBuilder() {
        if (callchainBuilder_ == null) {
          callchainBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntry.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.CallChainEntryOrBuilder>(
                  callchain_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          callchain_ = null;
        }
        return callchainBuilder_;
      }

      private long eventCount_ ;
      /**
       * <pre>
       * Simpleperf generates one sample whenever a specified amount of events happen
       * while running a monitored thread. So each sample belongs to one event type.
       * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
       * By using '-e' option, we can ask simpleperf to record samples for one or more
       * event types.
       * Each event type generates samples independently. But recording more event types
       * will cost more cpu time generating samples, which may affect the monitored threads
       * and sample lost rate.
       * event_count field shows the count of the events (belong to the sample's event type)
       * that have happened since last sample (belong to the sample's event type) for the
       * same thread. However, if there are lost samples between current sample and previous
       * sample, the event_count is the count of events from the last lost sample.
       * </pre>
       *
       * <code>optional uint64 event_count = 4;</code>
       * @return Whether the eventCount field is set.
       */
      @java.lang.Override
      public boolean hasEventCount() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Simpleperf generates one sample whenever a specified amount of events happen
       * while running a monitored thread. So each sample belongs to one event type.
       * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
       * By using '-e' option, we can ask simpleperf to record samples for one or more
       * event types.
       * Each event type generates samples independently. But recording more event types
       * will cost more cpu time generating samples, which may affect the monitored threads
       * and sample lost rate.
       * event_count field shows the count of the events (belong to the sample's event type)
       * that have happened since last sample (belong to the sample's event type) for the
       * same thread. However, if there are lost samples between current sample and previous
       * sample, the event_count is the count of events from the last lost sample.
       * </pre>
       *
       * <code>optional uint64 event_count = 4;</code>
       * @return The eventCount.
       */
      @java.lang.Override
      public long getEventCount() {
        return eventCount_;
      }
      /**
       * <pre>
       * Simpleperf generates one sample whenever a specified amount of events happen
       * while running a monitored thread. So each sample belongs to one event type.
       * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
       * By using '-e' option, we can ask simpleperf to record samples for one or more
       * event types.
       * Each event type generates samples independently. But recording more event types
       * will cost more cpu time generating samples, which may affect the monitored threads
       * and sample lost rate.
       * event_count field shows the count of the events (belong to the sample's event type)
       * that have happened since last sample (belong to the sample's event type) for the
       * same thread. However, if there are lost samples between current sample and previous
       * sample, the event_count is the count of events from the last lost sample.
       * </pre>
       *
       * <code>optional uint64 event_count = 4;</code>
       * @param value The eventCount to set.
       * @return This builder for chaining.
       */
      public Builder setEventCount(long value) {
        bitField0_ |= 0x00000008;
        eventCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Simpleperf generates one sample whenever a specified amount of events happen
       * while running a monitored thread. So each sample belongs to one event type.
       * Event type can be cpu-cycles, cpu-clock, sched:sched_switch or other types.
       * By using '-e' option, we can ask simpleperf to record samples for one or more
       * event types.
       * Each event type generates samples independently. But recording more event types
       * will cost more cpu time generating samples, which may affect the monitored threads
       * and sample lost rate.
       * event_count field shows the count of the events (belong to the sample's event type)
       * that have happened since last sample (belong to the sample's event type) for the
       * same thread. However, if there are lost samples between current sample and previous
       * sample, the event_count is the count of events from the last lost sample.
       * </pre>
       *
       * <code>optional uint64 event_count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventCount_ = 0L;
        onChanged();
        return this;
      }

      private int eventTypeId_ ;
      /**
       * <pre>
       * An index in meta_info.event_type, shows which event type current sample belongs to.
       * </pre>
       *
       * <code>optional uint32 event_type_id = 5;</code>
       * @return Whether the eventTypeId field is set.
       */
      @java.lang.Override
      public boolean hasEventTypeId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * An index in meta_info.event_type, shows which event type current sample belongs to.
       * </pre>
       *
       * <code>optional uint32 event_type_id = 5;</code>
       * @return The eventTypeId.
       */
      @java.lang.Override
      public int getEventTypeId() {
        return eventTypeId_;
      }
      /**
       * <pre>
       * An index in meta_info.event_type, shows which event type current sample belongs to.
       * </pre>
       *
       * <code>optional uint32 event_type_id = 5;</code>
       * @param value The eventTypeId to set.
       * @return This builder for chaining.
       */
      public Builder setEventTypeId(int value) {
        bitField0_ |= 0x00000010;
        eventTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An index in meta_info.event_type, shows which event type current sample belongs to.
       * </pre>
       *
       * <code>optional uint32 event_type_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventTypeId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventTypeId_ = 0;
        onChanged();
        return this;
      }

      private simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult unwindingResult_;
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder> unwindingResultBuilder_;
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       * @return Whether the unwindingResult field is set.
       */
      public boolean hasUnwindingResult() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       * @return The unwindingResult.
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult getUnwindingResult() {
        if (unwindingResultBuilder_ == null) {
          return unwindingResult_ == null ? simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance() : unwindingResult_;
        } else {
          return unwindingResultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public Builder setUnwindingResult(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult value) {
        if (unwindingResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unwindingResult_ = value;
          onChanged();
        } else {
          unwindingResultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public Builder setUnwindingResult(
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder builderForValue) {
        if (unwindingResultBuilder_ == null) {
          unwindingResult_ = builderForValue.build();
          onChanged();
        } else {
          unwindingResultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public Builder mergeUnwindingResult(simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult value) {
        if (unwindingResultBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              unwindingResult_ != null &&
              unwindingResult_ != simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance()) {
            unwindingResult_ =
              simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.newBuilder(unwindingResult_).mergeFrom(value).buildPartial();
          } else {
            unwindingResult_ = value;
          }
          onChanged();
        } else {
          unwindingResultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public Builder clearUnwindingResult() {
        if (unwindingResultBuilder_ == null) {
          unwindingResult_ = null;
          onChanged();
        } else {
          unwindingResultBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder getUnwindingResultBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getUnwindingResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder getUnwindingResultOrBuilder() {
        if (unwindingResultBuilder_ != null) {
          return unwindingResultBuilder_.getMessageOrBuilder();
        } else {
          return unwindingResult_ == null ?
              simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.getDefaultInstance() : unwindingResult_;
        }
      }
      /**
       * <pre>
       * Unwinding result is provided for samples without a complete callchain, when recorded with
       * --keep-failed-unwinding-result or --keep-failed-unwinding-debug-info.
       * </pre>
       *
       * <code>optional .simpleperf_report_proto.Sample.UnwindingResult unwinding_result = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder>
          getUnwindingResultFieldBuilder() {
        if (unwindingResultBuilder_ == null) {
          unwindingResultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResult.Builder, simpleperf.cleanup.proto.SimpleperfReport.Sample.UnwindingResultOrBuilder>(
                  getUnwindingResult(),
                  getParentForChildren(),
                  isClean());
          unwindingResult_ = null;
        }
        return unwindingResultBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.Sample)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.Sample)
    private static final simpleperf.cleanup.proto.SimpleperfReport.Sample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.Sample();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Sample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Sample>
        PARSER = new com.google.protobuf.AbstractParser<Sample>() {
      @java.lang.Override
      public Sample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sample(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LostSituationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.LostSituation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 sample_count = 1;</code>
     * @return Whether the sampleCount field is set.
     */
    boolean hasSampleCount();
    /**
     * <code>optional uint64 sample_count = 1;</code>
     * @return The sampleCount.
     */
    long getSampleCount();

    /**
     * <code>optional uint64 lost_count = 2;</code>
     * @return Whether the lostCount field is set.
     */
    boolean hasLostCount();
    /**
     * <code>optional uint64 lost_count = 2;</code>
     * @return The lostCount.
     */
    long getLostCount();
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.LostSituation}
   */
  public static final class LostSituation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.LostSituation)
      LostSituationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LostSituation.newBuilder() to construct.
    private LostSituation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LostSituation() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LostSituation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LostSituation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              sampleCount_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lostCount_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_LostSituation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_LostSituation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.LostSituation.class, simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder.class);
    }

    private int bitField0_;
    public static final int SAMPLE_COUNT_FIELD_NUMBER = 1;
    private long sampleCount_;
    /**
     * <code>optional uint64 sample_count = 1;</code>
     * @return Whether the sampleCount field is set.
     */
    @java.lang.Override
    public boolean hasSampleCount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 sample_count = 1;</code>
     * @return The sampleCount.
     */
    @java.lang.Override
    public long getSampleCount() {
      return sampleCount_;
    }

    public static final int LOST_COUNT_FIELD_NUMBER = 2;
    private long lostCount_;
    /**
     * <code>optional uint64 lost_count = 2;</code>
     * @return Whether the lostCount field is set.
     */
    @java.lang.Override
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint64 lost_count = 2;</code>
     * @return The lostCount.
     */
    @java.lang.Override
    public long getLostCount() {
      return lostCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, sampleCount_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, lostCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, sampleCount_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, lostCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.LostSituation)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.LostSituation other = (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) obj;

      if (hasSampleCount() != other.hasSampleCount()) return false;
      if (hasSampleCount()) {
        if (getSampleCount()
            != other.getSampleCount()) return false;
      }
      if (hasLostCount() != other.hasLostCount()) return false;
      if (hasLostCount()) {
        if (getLostCount()
            != other.getLostCount()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSampleCount()) {
        hash = (37 * hash) + SAMPLE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSampleCount());
      }
      if (hasLostCount()) {
        hash = (37 * hash) + LOST_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLostCount());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.LostSituation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.LostSituation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.LostSituation)
        simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_LostSituation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_LostSituation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.LostSituation.class, simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.LostSituation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sampleCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lostCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_LostSituation_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituation getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituation build() {
        simpleperf.cleanup.proto.SimpleperfReport.LostSituation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituation buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.LostSituation result = new simpleperf.cleanup.proto.SimpleperfReport.LostSituation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sampleCount_ = sampleCount_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lostCount_ = lostCount_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.LostSituation) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.LostSituation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.LostSituation other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance()) return this;
        if (other.hasSampleCount()) {
          setSampleCount(other.getSampleCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.LostSituation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long sampleCount_ ;
      /**
       * <code>optional uint64 sample_count = 1;</code>
       * @return Whether the sampleCount field is set.
       */
      @java.lang.Override
      public boolean hasSampleCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 sample_count = 1;</code>
       * @return The sampleCount.
       */
      @java.lang.Override
      public long getSampleCount() {
        return sampleCount_;
      }
      /**
       * <code>optional uint64 sample_count = 1;</code>
       * @param value The sampleCount to set.
       * @return This builder for chaining.
       */
      public Builder setSampleCount(long value) {
        bitField0_ |= 0x00000001;
        sampleCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 sample_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sampleCount_ = 0L;
        onChanged();
        return this;
      }

      private long lostCount_ ;
      /**
       * <code>optional uint64 lost_count = 2;</code>
       * @return Whether the lostCount field is set.
       */
      @java.lang.Override
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 lost_count = 2;</code>
       * @return The lostCount.
       */
      @java.lang.Override
      public long getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional uint64 lost_count = 2;</code>
       * @param value The lostCount to set.
       * @return This builder for chaining.
       */
      public Builder setLostCount(long value) {
        bitField0_ |= 0x00000002;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lost_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lostCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.LostSituation)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.LostSituation)
    private static final simpleperf.cleanup.proto.SimpleperfReport.LostSituation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.LostSituation();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.LostSituation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LostSituation>
        PARSER = new com.google.protobuf.AbstractParser<LostSituation>() {
      @java.lang.Override
      public LostSituation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LostSituation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LostSituation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LostSituation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.LostSituation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.File)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unique id for each file, starting from 0, and add 1 each time.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * unique id for each file, starting from 0, and add 1 each time.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return Whether the path field is set.
     */
    boolean hasPath();
    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return The path.
     */
    java.lang.String getPath();
    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return The bytes for path.
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @return A list containing the symbol.
     */
    java.util.List<java.lang.String>
        getSymbolList();
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @return The count of symbol.
     */
    int getSymbolCount();
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @param index The index of the element to return.
     * @return The symbol at the given index.
     */
    java.lang.String getSymbol(int index);
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the symbol at the given index.
     */
    com.google.protobuf.ByteString
        getSymbolBytes(int index);

    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @return A list containing the mangledSymbol.
     */
    java.util.List<java.lang.String>
        getMangledSymbolList();
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @return The count of mangledSymbol.
     */
    int getMangledSymbolCount();
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @param index The index of the element to return.
     * @return The mangledSymbol at the given index.
     */
    java.lang.String getMangledSymbol(int index);
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the mangledSymbol at the given index.
     */
    com.google.protobuf.ByteString
        getMangledSymbolBytes(int index);
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.File}
   */
  public static final class File extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.File)
      FileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use File.newBuilder() to construct.
    private File(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private File() {
      path_ = "";
      symbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      mangledSymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new File();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private File(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              path_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                symbol_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              symbol_.add(bs);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                mangledSymbol_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              mangledSymbol_.add(bs);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          symbol_ = symbol_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          mangledSymbol_ = mangledSymbol_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_File_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_File_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.File.class, simpleperf.cleanup.proto.SimpleperfReport.File.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * unique id for each file, starting from 0, and add 1 each time.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * unique id for each file, starting from 0, and add 1 each time.
     * </pre>
     *
     * <code>optional uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return Whether the path field is set.
     */
    @java.lang.Override
    public boolean hasPath() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * file path, like /system/lib/libc.so.
     * </pre>
     *
     * <code>optional string path = 2;</code>
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList symbol_;
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @return A list containing the symbol.
     */
    public com.google.protobuf.ProtocolStringList
        getSymbolList() {
      return symbol_;
    }
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @return The count of symbol.
     */
    public int getSymbolCount() {
      return symbol_.size();
    }
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @param index The index of the element to return.
     * @return The symbol at the given index.
     */
    public java.lang.String getSymbol(int index) {
      return symbol_.get(index);
    }
    /**
     * <pre>
     * symbol table of the file.
     * </pre>
     *
     * <code>repeated string symbol = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the symbol at the given index.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes(int index) {
      return symbol_.getByteString(index);
    }

    public static final int MANGLED_SYMBOL_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList mangledSymbol_;
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @return A list containing the mangledSymbol.
     */
    public com.google.protobuf.ProtocolStringList
        getMangledSymbolList() {
      return mangledSymbol_;
    }
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @return The count of mangledSymbol.
     */
    public int getMangledSymbolCount() {
      return mangledSymbol_.size();
    }
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @param index The index of the element to return.
     * @return The mangledSymbol at the given index.
     */
    public java.lang.String getMangledSymbol(int index) {
      return mangledSymbol_.get(index);
    }
    /**
     * <pre>
     * mangled symbol table of the file.
     * </pre>
     *
     * <code>repeated string mangled_symbol = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the mangledSymbol at the given index.
     */
    public com.google.protobuf.ByteString
        getMangledSymbolBytes(int index) {
      return mangledSymbol_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, path_);
      }
      for (int i = 0; i < symbol_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, symbol_.getRaw(i));
      }
      for (int i = 0; i < mangledSymbol_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, mangledSymbol_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, path_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < symbol_.size(); i++) {
          dataSize += computeStringSizeNoTag(symbol_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSymbolList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mangledSymbol_.size(); i++) {
          dataSize += computeStringSizeNoTag(mangledSymbol_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getMangledSymbolList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.File)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.File other = (simpleperf.cleanup.proto.SimpleperfReport.File) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasPath() != other.hasPath()) return false;
      if (hasPath()) {
        if (!getPath()
            .equals(other.getPath())) return false;
      }
      if (!getSymbolList()
          .equals(other.getSymbolList())) return false;
      if (!getMangledSymbolList()
          .equals(other.getMangledSymbolList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (getSymbolCount() > 0) {
        hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolList().hashCode();
      }
      if (getMangledSymbolCount() > 0) {
        hash = (37 * hash) + MANGLED_SYMBOL_FIELD_NUMBER;
        hash = (53 * hash) + getMangledSymbolList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.File parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.File prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.File}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.File)
        simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_File_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_File_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.File.class, simpleperf.cleanup.proto.SimpleperfReport.File.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.File.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        symbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        mangledSymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_File_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.File getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.File build() {
        simpleperf.cleanup.proto.SimpleperfReport.File result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.File buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.File result = new simpleperf.cleanup.proto.SimpleperfReport.File(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.path_ = path_;
        if (((bitField0_ & 0x00000004) != 0)) {
          symbol_ = symbol_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.symbol_ = symbol_;
        if (((bitField0_ & 0x00000008) != 0)) {
          mangledSymbol_ = mangledSymbol_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.mangledSymbol_ = mangledSymbol_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.File) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.File)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.File other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPath()) {
          bitField0_ |= 0x00000002;
          path_ = other.path_;
          onChanged();
        }
        if (!other.symbol_.isEmpty()) {
          if (symbol_.isEmpty()) {
            symbol_ = other.symbol_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSymbolIsMutable();
            symbol_.addAll(other.symbol_);
          }
          onChanged();
        }
        if (!other.mangledSymbol_.isEmpty()) {
          if (mangledSymbol_.isEmpty()) {
            mangledSymbol_ = other.mangledSymbol_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMangledSymbolIsMutable();
            mangledSymbol_.addAll(other.mangledSymbol_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.File parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.File) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * unique id for each file, starting from 0, and add 1 each time.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * unique id for each file, starting from 0, and add 1 each time.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * unique id for each file, starting from 0, and add 1 each time.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unique id for each file, starting from 0, and add 1 each time.
       * </pre>
       *
       * <code>optional uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @return Whether the path field is set.
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @return The path.
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @return The bytes for path.
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000002);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file path, like /system/lib/libc.so.
       * </pre>
       *
       * <code>optional string path = 2;</code>
       * @param value The bytes for path to set.
       * @return This builder for chaining.
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        path_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList symbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSymbolIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          symbol_ = new com.google.protobuf.LazyStringArrayList(symbol_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @return A list containing the symbol.
       */
      public com.google.protobuf.ProtocolStringList
          getSymbolList() {
        return symbol_.getUnmodifiableView();
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @return The count of symbol.
       */
      public int getSymbolCount() {
        return symbol_.size();
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param index The index of the element to return.
       * @return The symbol at the given index.
       */
      public java.lang.String getSymbol(int index) {
        return symbol_.get(index);
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the symbol at the given index.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes(int index) {
        return symbol_.getByteString(index);
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param index The index to set the value at.
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSymbolIsMutable();
        symbol_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param value The symbol to add.
       * @return This builder for chaining.
       */
      public Builder addSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSymbolIsMutable();
        symbol_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param values The symbol to add.
       * @return This builder for chaining.
       */
      public Builder addAllSymbol(
          java.lang.Iterable<java.lang.String> values) {
        ensureSymbolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, symbol_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        symbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol table of the file.
       * </pre>
       *
       * <code>repeated string symbol = 3;</code>
       * @param value The bytes of the symbol to add.
       * @return This builder for chaining.
       */
      public Builder addSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSymbolIsMutable();
        symbol_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList mangledSymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMangledSymbolIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          mangledSymbol_ = new com.google.protobuf.LazyStringArrayList(mangledSymbol_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @return A list containing the mangledSymbol.
       */
      public com.google.protobuf.ProtocolStringList
          getMangledSymbolList() {
        return mangledSymbol_.getUnmodifiableView();
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @return The count of mangledSymbol.
       */
      public int getMangledSymbolCount() {
        return mangledSymbol_.size();
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param index The index of the element to return.
       * @return The mangledSymbol at the given index.
       */
      public java.lang.String getMangledSymbol(int index) {
        return mangledSymbol_.get(index);
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the mangledSymbol at the given index.
       */
      public com.google.protobuf.ByteString
          getMangledSymbolBytes(int index) {
        return mangledSymbol_.getByteString(index);
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param index The index to set the value at.
       * @param value The mangledSymbol to set.
       * @return This builder for chaining.
       */
      public Builder setMangledSymbol(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMangledSymbolIsMutable();
        mangledSymbol_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param value The mangledSymbol to add.
       * @return This builder for chaining.
       */
      public Builder addMangledSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMangledSymbolIsMutable();
        mangledSymbol_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param values The mangledSymbol to add.
       * @return This builder for chaining.
       */
      public Builder addAllMangledSymbol(
          java.lang.Iterable<java.lang.String> values) {
        ensureMangledSymbolIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mangledSymbol_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMangledSymbol() {
        mangledSymbol_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mangled symbol table of the file.
       * </pre>
       *
       * <code>repeated string mangled_symbol = 4;</code>
       * @param value The bytes of the mangledSymbol to add.
       * @return This builder for chaining.
       */
      public Builder addMangledSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMangledSymbolIsMutable();
        mangledSymbol_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.File)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.File)
    private static final simpleperf.cleanup.proto.SimpleperfReport.File DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.File();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.File getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<File>
        PARSER = new com.google.protobuf.AbstractParser<File>() {
      @java.lang.Override
      public File parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new File(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<File> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<File> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.File getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThreadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.Thread)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 thread_id = 1;</code>
     * @return Whether the threadId field is set.
     */
    boolean hasThreadId();
    /**
     * <code>optional uint32 thread_id = 1;</code>
     * @return The threadId.
     */
    int getThreadId();

    /**
     * <code>optional uint32 process_id = 2;</code>
     * @return Whether the processId field is set.
     */
    boolean hasProcessId();
    /**
     * <code>optional uint32 process_id = 2;</code>
     * @return The processId.
     */
    int getProcessId();

    /**
     * <code>optional string thread_name = 3;</code>
     * @return Whether the threadName field is set.
     */
    boolean hasThreadName();
    /**
     * <code>optional string thread_name = 3;</code>
     * @return The threadName.
     */
    java.lang.String getThreadName();
    /**
     * <code>optional string thread_name = 3;</code>
     * @return The bytes for threadName.
     */
    com.google.protobuf.ByteString
        getThreadNameBytes();
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.Thread}
   */
  public static final class Thread extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.Thread)
      ThreadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Thread.newBuilder() to construct.
    private Thread(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Thread() {
      threadName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Thread();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Thread(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              threadId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              processId_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              threadName_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Thread_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Thread_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.Thread.class, simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder.class);
    }

    private int bitField0_;
    public static final int THREAD_ID_FIELD_NUMBER = 1;
    private int threadId_;
    /**
     * <code>optional uint32 thread_id = 1;</code>
     * @return Whether the threadId field is set.
     */
    @java.lang.Override
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 thread_id = 1;</code>
     * @return The threadId.
     */
    @java.lang.Override
    public int getThreadId() {
      return threadId_;
    }

    public static final int PROCESS_ID_FIELD_NUMBER = 2;
    private int processId_;
    /**
     * <code>optional uint32 process_id = 2;</code>
     * @return Whether the processId field is set.
     */
    @java.lang.Override
    public boolean hasProcessId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 process_id = 2;</code>
     * @return The processId.
     */
    @java.lang.Override
    public int getProcessId() {
      return processId_;
    }

    public static final int THREAD_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object threadName_;
    /**
     * <code>optional string thread_name = 3;</code>
     * @return Whether the threadName field is set.
     */
    @java.lang.Override
    public boolean hasThreadName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string thread_name = 3;</code>
     * @return The threadName.
     */
    @java.lang.Override
    public java.lang.String getThreadName() {
      java.lang.Object ref = threadName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          threadName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string thread_name = 3;</code>
     * @return The bytes for threadName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getThreadNameBytes() {
      java.lang.Object ref = threadName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        threadName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, processId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, threadName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, threadId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, processId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, threadName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.Thread)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.Thread other = (simpleperf.cleanup.proto.SimpleperfReport.Thread) obj;

      if (hasThreadId() != other.hasThreadId()) return false;
      if (hasThreadId()) {
        if (getThreadId()
            != other.getThreadId()) return false;
      }
      if (hasProcessId() != other.hasProcessId()) return false;
      if (hasProcessId()) {
        if (getProcessId()
            != other.getProcessId()) return false;
      }
      if (hasThreadName() != other.hasThreadName()) return false;
      if (hasThreadName()) {
        if (!getThreadName()
            .equals(other.getThreadName())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasThreadId()) {
        hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getThreadId();
      }
      if (hasProcessId()) {
        hash = (37 * hash) + PROCESS_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProcessId();
      }
      if (hasThreadName()) {
        hash = (37 * hash) + THREAD_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getThreadName().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Thread parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.Thread prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.Thread}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.Thread)
        simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Thread_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Thread_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.Thread.class, simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.Thread.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        processId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        threadName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Thread_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Thread getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Thread build() {
        simpleperf.cleanup.proto.SimpleperfReport.Thread result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Thread buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.Thread result = new simpleperf.cleanup.proto.SimpleperfReport.Thread(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.threadId_ = threadId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.processId_ = processId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.threadName_ = threadName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.Thread) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Thread)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.Thread other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance()) return this;
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasProcessId()) {
          setProcessId(other.getProcessId());
        }
        if (other.hasThreadName()) {
          bitField0_ |= 0x00000004;
          threadName_ = other.threadName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.Thread parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.Thread) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int threadId_ ;
      /**
       * <code>optional uint32 thread_id = 1;</code>
       * @return Whether the threadId field is set.
       */
      @java.lang.Override
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 thread_id = 1;</code>
       * @return The threadId.
       */
      @java.lang.Override
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>optional uint32 thread_id = 1;</code>
       * @param value The threadId to set.
       * @return This builder for chaining.
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000001;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 thread_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threadId_ = 0;
        onChanged();
        return this;
      }

      private int processId_ ;
      /**
       * <code>optional uint32 process_id = 2;</code>
       * @return Whether the processId field is set.
       */
      @java.lang.Override
      public boolean hasProcessId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 process_id = 2;</code>
       * @return The processId.
       */
      @java.lang.Override
      public int getProcessId() {
        return processId_;
      }
      /**
       * <code>optional uint32 process_id = 2;</code>
       * @param value The processId to set.
       * @return This builder for chaining.
       */
      public Builder setProcessId(int value) {
        bitField0_ |= 0x00000002;
        processId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 process_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        processId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object threadName_ = "";
      /**
       * <code>optional string thread_name = 3;</code>
       * @return Whether the threadName field is set.
       */
      public boolean hasThreadName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string thread_name = 3;</code>
       * @return The threadName.
       */
      public java.lang.String getThreadName() {
        java.lang.Object ref = threadName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            threadName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string thread_name = 3;</code>
       * @return The bytes for threadName.
       */
      public com.google.protobuf.ByteString
          getThreadNameBytes() {
        java.lang.Object ref = threadName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          threadName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string thread_name = 3;</code>
       * @param value The threadName to set.
       * @return This builder for chaining.
       */
      public Builder setThreadName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        threadName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string thread_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        threadName_ = getDefaultInstance().getThreadName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string thread_name = 3;</code>
       * @param value The bytes for threadName to set.
       * @return This builder for chaining.
       */
      public Builder setThreadNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        threadName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.Thread)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.Thread)
    private static final simpleperf.cleanup.proto.SimpleperfReport.Thread DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.Thread();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Thread getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Thread>
        PARSER = new com.google.protobuf.AbstractParser<Thread>() {
      @java.lang.Override
      public Thread parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Thread(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Thread> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Thread> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Thread getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetaInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.MetaInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string event_type = 1;</code>
     * @return A list containing the eventType.
     */
    java.util.List<java.lang.String>
        getEventTypeList();
    /**
     * <code>repeated string event_type = 1;</code>
     * @return The count of eventType.
     */
    int getEventTypeCount();
    /**
     * <code>repeated string event_type = 1;</code>
     * @param index The index of the element to return.
     * @return The eventType at the given index.
     */
    java.lang.String getEventType(int index);
    /**
     * <code>repeated string event_type = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the eventType at the given index.
     */
    com.google.protobuf.ByteString
        getEventTypeBytes(int index);

    /**
     * <code>optional string app_package_name = 2;</code>
     * @return Whether the appPackageName field is set.
     */
    boolean hasAppPackageName();
    /**
     * <code>optional string app_package_name = 2;</code>
     * @return The appPackageName.
     */
    java.lang.String getAppPackageName();
    /**
     * <code>optional string app_package_name = 2;</code>
     * @return The bytes for appPackageName.
     */
    com.google.protobuf.ByteString
        getAppPackageNameBytes();

    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return Whether the appType field is set.
     */
    boolean hasAppType();
    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return The appType.
     */
    java.lang.String getAppType();
    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return The bytes for appType.
     */
    com.google.protobuf.ByteString
        getAppTypeBytes();

    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return Whether the androidSdkVersion field is set.
     */
    boolean hasAndroidSdkVersion();
    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return The androidSdkVersion.
     */
    java.lang.String getAndroidSdkVersion();
    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return The bytes for androidSdkVersion.
     */
    com.google.protobuf.ByteString
        getAndroidSdkVersionBytes();

    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return Whether the androidBuildType field is set.
     */
    boolean hasAndroidBuildType();
    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return The androidBuildType.
     */
    java.lang.String getAndroidBuildType();
    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return The bytes for androidBuildType.
     */
    com.google.protobuf.ByteString
        getAndroidBuildTypeBytes();

    /**
     * <pre>
     * True if the profile is recorded with --trace-offcpu option.
     * </pre>
     *
     * <code>optional bool trace_offcpu = 6;</code>
     * @return Whether the traceOffcpu field is set.
     */
    boolean hasTraceOffcpu();
    /**
     * <pre>
     * True if the profile is recorded with --trace-offcpu option.
     * </pre>
     *
     * <code>optional bool trace_offcpu = 6;</code>
     * @return The traceOffcpu.
     */
    boolean getTraceOffcpu();
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.MetaInfo}
   */
  public static final class MetaInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.MetaInfo)
      MetaInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MetaInfo.newBuilder() to construct.
    private MetaInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MetaInfo() {
      eventType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      appPackageName_ = "";
      appType_ = "";
      androidSdkVersion_ = "";
      androidBuildType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MetaInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MetaInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                eventType_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              eventType_.add(bs);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              appPackageName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              appType_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              androidSdkVersion_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              androidBuildType_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              traceOffcpu_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          eventType_ = eventType_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_MetaInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_MetaInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.class, simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder.class);
    }

    private int bitField0_;
    public static final int EVENT_TYPE_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList eventType_;
    /**
     * <code>repeated string event_type = 1;</code>
     * @return A list containing the eventType.
     */
    public com.google.protobuf.ProtocolStringList
        getEventTypeList() {
      return eventType_;
    }
    /**
     * <code>repeated string event_type = 1;</code>
     * @return The count of eventType.
     */
    public int getEventTypeCount() {
      return eventType_.size();
    }
    /**
     * <code>repeated string event_type = 1;</code>
     * @param index The index of the element to return.
     * @return The eventType at the given index.
     */
    public java.lang.String getEventType(int index) {
      return eventType_.get(index);
    }
    /**
     * <code>repeated string event_type = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the eventType at the given index.
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes(int index) {
      return eventType_.getByteString(index);
    }

    public static final int APP_PACKAGE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object appPackageName_;
    /**
     * <code>optional string app_package_name = 2;</code>
     * @return Whether the appPackageName field is set.
     */
    @java.lang.Override
    public boolean hasAppPackageName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string app_package_name = 2;</code>
     * @return The appPackageName.
     */
    @java.lang.Override
    public java.lang.String getAppPackageName() {
      java.lang.Object ref = appPackageName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appPackageName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string app_package_name = 2;</code>
     * @return The bytes for appPackageName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAppPackageNameBytes() {
      java.lang.Object ref = appPackageName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appPackageName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_TYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object appType_;
    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return Whether the appType field is set.
     */
    @java.lang.Override
    public boolean hasAppType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return The appType.
     */
    @java.lang.Override
    public java.lang.String getAppType() {
      java.lang.Object ref = appType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * debuggable, profileable or non_profileable
     * </pre>
     *
     * <code>optional string app_type = 3;</code>
     * @return The bytes for appType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAppTypeBytes() {
      java.lang.Object ref = appType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANDROID_SDK_VERSION_FIELD_NUMBER = 4;
    private volatile java.lang.Object androidSdkVersion_;
    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return Whether the androidSdkVersion field is set.
     */
    @java.lang.Override
    public boolean hasAndroidSdkVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return The androidSdkVersion.
     */
    @java.lang.Override
    public java.lang.String getAndroidSdkVersion() {
      java.lang.Object ref = androidSdkVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          androidSdkVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string android_sdk_version = 4;</code>
     * @return The bytes for androidSdkVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAndroidSdkVersionBytes() {
      java.lang.Object ref = androidSdkVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        androidSdkVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANDROID_BUILD_TYPE_FIELD_NUMBER = 5;
    private volatile java.lang.Object androidBuildType_;
    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return Whether the androidBuildType field is set.
     */
    @java.lang.Override
    public boolean hasAndroidBuildType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return The androidBuildType.
     */
    @java.lang.Override
    public java.lang.String getAndroidBuildType() {
      java.lang.Object ref = androidBuildType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          androidBuildType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * user, userdebug or eng
     * </pre>
     *
     * <code>optional string android_build_type = 5;</code>
     * @return The bytes for androidBuildType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAndroidBuildTypeBytes() {
      java.lang.Object ref = androidBuildType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        androidBuildType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRACE_OFFCPU_FIELD_NUMBER = 6;
    private boolean traceOffcpu_;
    /**
     * <pre>
     * True if the profile is recorded with --trace-offcpu option.
     * </pre>
     *
     * <code>optional bool trace_offcpu = 6;</code>
     * @return Whether the traceOffcpu field is set.
     */
    @java.lang.Override
    public boolean hasTraceOffcpu() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * True if the profile is recorded with --trace-offcpu option.
     * </pre>
     *
     * <code>optional bool trace_offcpu = 6;</code>
     * @return The traceOffcpu.
     */
    @java.lang.Override
    public boolean getTraceOffcpu() {
      return traceOffcpu_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < eventType_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, eventType_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, appPackageName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, appType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, androidSdkVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, androidBuildType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(6, traceOffcpu_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < eventType_.size(); i++) {
          dataSize += computeStringSizeNoTag(eventType_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getEventTypeList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, appPackageName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, appType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, androidSdkVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, androidBuildType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, traceOffcpu_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.MetaInfo)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.MetaInfo other = (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) obj;

      if (!getEventTypeList()
          .equals(other.getEventTypeList())) return false;
      if (hasAppPackageName() != other.hasAppPackageName()) return false;
      if (hasAppPackageName()) {
        if (!getAppPackageName()
            .equals(other.getAppPackageName())) return false;
      }
      if (hasAppType() != other.hasAppType()) return false;
      if (hasAppType()) {
        if (!getAppType()
            .equals(other.getAppType())) return false;
      }
      if (hasAndroidSdkVersion() != other.hasAndroidSdkVersion()) return false;
      if (hasAndroidSdkVersion()) {
        if (!getAndroidSdkVersion()
            .equals(other.getAndroidSdkVersion())) return false;
      }
      if (hasAndroidBuildType() != other.hasAndroidBuildType()) return false;
      if (hasAndroidBuildType()) {
        if (!getAndroidBuildType()
            .equals(other.getAndroidBuildType())) return false;
      }
      if (hasTraceOffcpu() != other.hasTraceOffcpu()) return false;
      if (hasTraceOffcpu()) {
        if (getTraceOffcpu()
            != other.getTraceOffcpu()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventTypeCount() > 0) {
        hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getEventTypeList().hashCode();
      }
      if (hasAppPackageName()) {
        hash = (37 * hash) + APP_PACKAGE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getAppPackageName().hashCode();
      }
      if (hasAppType()) {
        hash = (37 * hash) + APP_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAppType().hashCode();
      }
      if (hasAndroidSdkVersion()) {
        hash = (37 * hash) + ANDROID_SDK_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getAndroidSdkVersion().hashCode();
      }
      if (hasAndroidBuildType()) {
        hash = (37 * hash) + ANDROID_BUILD_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAndroidBuildType().hashCode();
      }
      if (hasTraceOffcpu()) {
        hash = (37 * hash) + TRACE_OFFCPU_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTraceOffcpu());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.MetaInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.MetaInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.MetaInfo)
        simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_MetaInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_MetaInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.class, simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        eventType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        appPackageName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        appType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        androidSdkVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        androidBuildType_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        traceOffcpu_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_MetaInfo_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo build() {
        simpleperf.cleanup.proto.SimpleperfReport.MetaInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.MetaInfo result = new simpleperf.cleanup.proto.SimpleperfReport.MetaInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          eventType_ = eventType_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.appPackageName_ = appPackageName_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appType_ = appType_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.androidSdkVersion_ = androidSdkVersion_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.androidBuildType_ = androidBuildType_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.traceOffcpu_ = traceOffcpu_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.MetaInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.MetaInfo other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance()) return this;
        if (!other.eventType_.isEmpty()) {
          if (eventType_.isEmpty()) {
            eventType_ = other.eventType_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEventTypeIsMutable();
            eventType_.addAll(other.eventType_);
          }
          onChanged();
        }
        if (other.hasAppPackageName()) {
          bitField0_ |= 0x00000002;
          appPackageName_ = other.appPackageName_;
          onChanged();
        }
        if (other.hasAppType()) {
          bitField0_ |= 0x00000004;
          appType_ = other.appType_;
          onChanged();
        }
        if (other.hasAndroidSdkVersion()) {
          bitField0_ |= 0x00000008;
          androidSdkVersion_ = other.androidSdkVersion_;
          onChanged();
        }
        if (other.hasAndroidBuildType()) {
          bitField0_ |= 0x00000010;
          androidBuildType_ = other.androidBuildType_;
          onChanged();
        }
        if (other.hasTraceOffcpu()) {
          setTraceOffcpu(other.getTraceOffcpu());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.MetaInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList eventType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEventTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          eventType_ = new com.google.protobuf.LazyStringArrayList(eventType_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @return A list containing the eventType.
       */
      public com.google.protobuf.ProtocolStringList
          getEventTypeList() {
        return eventType_.getUnmodifiableView();
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @return The count of eventType.
       */
      public int getEventTypeCount() {
        return eventType_.size();
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param index The index of the element to return.
       * @return The eventType at the given index.
       */
      public java.lang.String getEventType(int index) {
        return eventType_.get(index);
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the eventType at the given index.
       */
      public com.google.protobuf.ByteString
          getEventTypeBytes(int index) {
        return eventType_.getByteString(index);
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param index The index to set the value at.
       * @param value The eventType to set.
       * @return This builder for chaining.
       */
      public Builder setEventType(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEventTypeIsMutable();
        eventType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param value The eventType to add.
       * @return This builder for chaining.
       */
      public Builder addEventType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEventTypeIsMutable();
        eventType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param values The eventType to add.
       * @return This builder for chaining.
       */
      public Builder addAllEventType(
          java.lang.Iterable<java.lang.String> values) {
        ensureEventTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, eventType_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventType() {
        eventType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string event_type = 1;</code>
       * @param value The bytes of the eventType to add.
       * @return This builder for chaining.
       */
      public Builder addEventTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEventTypeIsMutable();
        eventType_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object appPackageName_ = "";
      /**
       * <code>optional string app_package_name = 2;</code>
       * @return Whether the appPackageName field is set.
       */
      public boolean hasAppPackageName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string app_package_name = 2;</code>
       * @return The appPackageName.
       */
      public java.lang.String getAppPackageName() {
        java.lang.Object ref = appPackageName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appPackageName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string app_package_name = 2;</code>
       * @return The bytes for appPackageName.
       */
      public com.google.protobuf.ByteString
          getAppPackageNameBytes() {
        java.lang.Object ref = appPackageName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appPackageName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string app_package_name = 2;</code>
       * @param value The appPackageName to set.
       * @return This builder for chaining.
       */
      public Builder setAppPackageName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appPackageName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_package_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppPackageName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appPackageName_ = getDefaultInstance().getAppPackageName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_package_name = 2;</code>
       * @param value The bytes for appPackageName to set.
       * @return This builder for chaining.
       */
      public Builder setAppPackageNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appPackageName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object appType_ = "";
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @return Whether the appType field is set.
       */
      public boolean hasAppType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @return The appType.
       */
      public java.lang.String getAppType() {
        java.lang.Object ref = appType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            appType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @return The bytes for appType.
       */
      public com.google.protobuf.ByteString
          getAppTypeBytes() {
        java.lang.Object ref = appType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @param value The appType to set.
       * @return This builder for chaining.
       */
      public Builder setAppType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        appType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        appType_ = getDefaultInstance().getAppType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * debuggable, profileable or non_profileable
       * </pre>
       *
       * <code>optional string app_type = 3;</code>
       * @param value The bytes for appType to set.
       * @return This builder for chaining.
       */
      public Builder setAppTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        appType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object androidSdkVersion_ = "";
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @return Whether the androidSdkVersion field is set.
       */
      public boolean hasAndroidSdkVersion() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @return The androidSdkVersion.
       */
      public java.lang.String getAndroidSdkVersion() {
        java.lang.Object ref = androidSdkVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            androidSdkVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @return The bytes for androidSdkVersion.
       */
      public com.google.protobuf.ByteString
          getAndroidSdkVersionBytes() {
        java.lang.Object ref = androidSdkVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          androidSdkVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @param value The androidSdkVersion to set.
       * @return This builder for chaining.
       */
      public Builder setAndroidSdkVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        androidSdkVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAndroidSdkVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        androidSdkVersion_ = getDefaultInstance().getAndroidSdkVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string android_sdk_version = 4;</code>
       * @param value The bytes for androidSdkVersion to set.
       * @return This builder for chaining.
       */
      public Builder setAndroidSdkVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        androidSdkVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object androidBuildType_ = "";
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @return Whether the androidBuildType field is set.
       */
      public boolean hasAndroidBuildType() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @return The androidBuildType.
       */
      public java.lang.String getAndroidBuildType() {
        java.lang.Object ref = androidBuildType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            androidBuildType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @return The bytes for androidBuildType.
       */
      public com.google.protobuf.ByteString
          getAndroidBuildTypeBytes() {
        java.lang.Object ref = androidBuildType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          androidBuildType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @param value The androidBuildType to set.
       * @return This builder for chaining.
       */
      public Builder setAndroidBuildType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        androidBuildType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAndroidBuildType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        androidBuildType_ = getDefaultInstance().getAndroidBuildType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user, userdebug or eng
       * </pre>
       *
       * <code>optional string android_build_type = 5;</code>
       * @param value The bytes for androidBuildType to set.
       * @return This builder for chaining.
       */
      public Builder setAndroidBuildTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        androidBuildType_ = value;
        onChanged();
        return this;
      }

      private boolean traceOffcpu_ ;
      /**
       * <pre>
       * True if the profile is recorded with --trace-offcpu option.
       * </pre>
       *
       * <code>optional bool trace_offcpu = 6;</code>
       * @return Whether the traceOffcpu field is set.
       */
      @java.lang.Override
      public boolean hasTraceOffcpu() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * True if the profile is recorded with --trace-offcpu option.
       * </pre>
       *
       * <code>optional bool trace_offcpu = 6;</code>
       * @return The traceOffcpu.
       */
      @java.lang.Override
      public boolean getTraceOffcpu() {
        return traceOffcpu_;
      }
      /**
       * <pre>
       * True if the profile is recorded with --trace-offcpu option.
       * </pre>
       *
       * <code>optional bool trace_offcpu = 6;</code>
       * @param value The traceOffcpu to set.
       * @return This builder for chaining.
       */
      public Builder setTraceOffcpu(boolean value) {
        bitField0_ |= 0x00000020;
        traceOffcpu_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True if the profile is recorded with --trace-offcpu option.
       * </pre>
       *
       * <code>optional bool trace_offcpu = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceOffcpu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        traceOffcpu_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.MetaInfo)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.MetaInfo)
    private static final simpleperf.cleanup.proto.SimpleperfReport.MetaInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.MetaInfo();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MetaInfo>
        PARSER = new com.google.protobuf.AbstractParser<MetaInfo>() {
      @java.lang.Override
      public MetaInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MetaInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MetaInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MetaInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContextSwitchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.ContextSwitch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
     * </pre>
     *
     * <code>optional bool switch_on = 1;</code>
     * @return Whether the switchOn field is set.
     */
    boolean hasSwitchOn();
    /**
     * <pre>
     * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
     * </pre>
     *
     * <code>optional bool switch_on = 1;</code>
     * @return The switchOn.
     */
    boolean getSwitchOn();

    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 2;</code>
     * @return Whether the time field is set.
     */
    boolean hasTime();
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 2;</code>
     * @return The time.
     */
    long getTime();

    /**
     * <code>optional uint32 thread_id = 3;</code>
     * @return Whether the threadId field is set.
     */
    boolean hasThreadId();
    /**
     * <code>optional uint32 thread_id = 3;</code>
     * @return The threadId.
     */
    int getThreadId();
  }
  /**
   * <pre>
   * Thread context switch info. It is available when MetaInfo.trace_offcpu = true.
   * </pre>
   *
   * Protobuf type {@code simpleperf_report_proto.ContextSwitch}
   */
  public static final class ContextSwitch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.ContextSwitch)
      ContextSwitchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContextSwitch.newBuilder() to construct.
    private ContextSwitch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContextSwitch() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContextSwitch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContextSwitch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              switchOn_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              threadId_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_ContextSwitch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_ContextSwitch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.class, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder.class);
    }

    private int bitField0_;
    public static final int SWITCH_ON_FIELD_NUMBER = 1;
    private boolean switchOn_;
    /**
     * <pre>
     * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
     * </pre>
     *
     * <code>optional bool switch_on = 1;</code>
     * @return Whether the switchOn field is set.
     */
    @java.lang.Override
    public boolean hasSwitchOn() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
     * </pre>
     *
     * <code>optional bool switch_on = 1;</code>
     * @return The switchOn.
     */
    @java.lang.Override
    public boolean getSwitchOn() {
      return switchOn_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 2;</code>
     * @return Whether the time field is set.
     */
    @java.lang.Override
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
     * </pre>
     *
     * <code>optional uint64 time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public long getTime() {
      return time_;
    }

    public static final int THREAD_ID_FIELD_NUMBER = 3;
    private int threadId_;
    /**
     * <code>optional uint32 thread_id = 3;</code>
     * @return Whether the threadId field is set.
     */
    @java.lang.Override
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 thread_id = 3;</code>
     * @return The threadId.
     */
    @java.lang.Override
    public int getThreadId() {
      return threadId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, switchOn_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, time_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, threadId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, switchOn_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, threadId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch other = (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) obj;

      if (hasSwitchOn() != other.hasSwitchOn()) return false;
      if (hasSwitchOn()) {
        if (getSwitchOn()
            != other.getSwitchOn()) return false;
      }
      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasThreadId() != other.hasThreadId()) return false;
      if (hasThreadId()) {
        if (getThreadId()
            != other.getThreadId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSwitchOn()) {
        hash = (37 * hash) + SWITCH_ON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSwitchOn());
      }
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTime());
      }
      if (hasThreadId()) {
        hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getThreadId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Thread context switch info. It is available when MetaInfo.trace_offcpu = true.
     * </pre>
     *
     * Protobuf type {@code simpleperf_report_proto.ContextSwitch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.ContextSwitch)
        simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_ContextSwitch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_ContextSwitch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.class, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        switchOn_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_ContextSwitch_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch build() {
        simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch result = new simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.switchOn_ = switchOn_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.threadId_ = threadId_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance()) return this;
        if (other.hasSwitchOn()) {
          setSwitchOn(other.getSwitchOn());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean switchOn_ ;
      /**
       * <pre>
       * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
       * </pre>
       *
       * <code>optional bool switch_on = 1;</code>
       * @return Whether the switchOn field is set.
       */
      @java.lang.Override
      public boolean hasSwitchOn() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
       * </pre>
       *
       * <code>optional bool switch_on = 1;</code>
       * @return The switchOn.
       */
      @java.lang.Override
      public boolean getSwitchOn() {
        return switchOn_;
      }
      /**
       * <pre>
       * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
       * </pre>
       *
       * <code>optional bool switch_on = 1;</code>
       * @param value The switchOn to set.
       * @return This builder for chaining.
       */
      public Builder setSwitchOn(boolean value) {
        bitField0_ |= 0x00000001;
        switchOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the thread is scheduled on cpu, otherwise it is scheduled off cpu.
       * </pre>
       *
       * <code>optional bool switch_on = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSwitchOn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        switchOn_ = false;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 2;</code>
       * @return Whether the time field is set.
       */
      @java.lang.Override
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Monotonic clock time in nanoseconds. On kernel &lt; 4.1, it's perf clock instead.
       * </pre>
       *
       * <code>optional uint64 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int threadId_ ;
      /**
       * <code>optional uint32 thread_id = 3;</code>
       * @return Whether the threadId field is set.
       */
      @java.lang.Override
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 thread_id = 3;</code>
       * @return The threadId.
       */
      @java.lang.Override
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>optional uint32 thread_id = 3;</code>
       * @param value The threadId to set.
       * @return This builder for chaining.
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000004;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 thread_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        threadId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.ContextSwitch)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.ContextSwitch)
    private static final simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ContextSwitch>
        PARSER = new com.google.protobuf.AbstractParser<ContextSwitch>() {
      @java.lang.Override
      public ContextSwitch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContextSwitch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContextSwitch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContextSwitch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:simpleperf_report_proto.Record)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     * @return Whether the sample field is set.
     */
    boolean hasSample();
    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     * @return The sample.
     */
    simpleperf.cleanup.proto.SimpleperfReport.Sample getSample();
    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder getSampleOrBuilder();

    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     * @return Whether the lost field is set.
     */
    boolean hasLost();
    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     * @return The lost.
     */
    simpleperf.cleanup.proto.SimpleperfReport.LostSituation getLost();
    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder getLostOrBuilder();

    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     * @return Whether the file field is set.
     */
    boolean hasFile();
    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     * @return The file.
     */
    simpleperf.cleanup.proto.SimpleperfReport.File getFile();
    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder getFileOrBuilder();

    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     * @return Whether the thread field is set.
     */
    boolean hasThread();
    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     * @return The thread.
     */
    simpleperf.cleanup.proto.SimpleperfReport.Thread getThread();
    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder getThreadOrBuilder();

    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     * @return Whether the metaInfo field is set.
     */
    boolean hasMetaInfo();
    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     * @return The metaInfo.
     */
    simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getMetaInfo();
    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder getMetaInfoOrBuilder();

    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     * @return Whether the contextSwitch field is set.
     */
    boolean hasContextSwitch();
    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     * @return The contextSwitch.
     */
    simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getContextSwitch();
    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     */
    simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder getContextSwitchOrBuilder();

    public simpleperf.cleanup.proto.SimpleperfReport.Record.RecordDataCase getRecordDataCase();
  }
  /**
   * Protobuf type {@code simpleperf_report_proto.Record}
   */
  public static final class Record extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:simpleperf_report_proto.Record)
      RecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record.newBuilder() to construct.
    private Record(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Record(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder subBuilder = null;
              if (recordDataCase_ == 1) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.Sample.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 1;
              break;
            }
            case 18: {
              simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder subBuilder = null;
              if (recordDataCase_ == 2) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.LostSituation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 2;
              break;
            }
            case 26: {
              simpleperf.cleanup.proto.SimpleperfReport.File.Builder subBuilder = null;
              if (recordDataCase_ == 3) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.File) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.File.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.File) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 3;
              break;
            }
            case 34: {
              simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder subBuilder = null;
              if (recordDataCase_ == 4) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.Thread.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 4;
              break;
            }
            case 42: {
              simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder subBuilder = null;
              if (recordDataCase_ == 5) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 5;
              break;
            }
            case 50: {
              simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder subBuilder = null;
              if (recordDataCase_ == 6) {
                subBuilder = ((simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_).toBuilder();
              }
              recordData_ =
                  input.readMessage(simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_);
                recordData_ = subBuilder.buildPartial();
              }
              recordDataCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Record_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Record_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              simpleperf.cleanup.proto.SimpleperfReport.Record.class, simpleperf.cleanup.proto.SimpleperfReport.Record.Builder.class);
    }

    private int bitField0_;
    private int recordDataCase_ = 0;
    private java.lang.Object recordData_;
    public enum RecordDataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SAMPLE(1),
      LOST(2),
      FILE(3),
      THREAD(4),
      META_INFO(5),
      CONTEXT_SWITCH(6),
      RECORDDATA_NOT_SET(0);
      private final int value;
      private RecordDataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RecordDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static RecordDataCase forNumber(int value) {
        switch (value) {
          case 1: return SAMPLE;
          case 2: return LOST;
          case 3: return FILE;
          case 4: return THREAD;
          case 5: return META_INFO;
          case 6: return CONTEXT_SWITCH;
          case 0: return RECORDDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RecordDataCase
    getRecordDataCase() {
      return RecordDataCase.forNumber(
          recordDataCase_);
    }

    public static final int SAMPLE_FIELD_NUMBER = 1;
    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     * @return Whether the sample field is set.
     */
    @java.lang.Override
    public boolean hasSample() {
      return recordDataCase_ == 1;
    }
    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     * @return The sample.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Sample getSample() {
      if (recordDataCase_ == 1) {
         return (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.Sample sample = 1;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder getSampleOrBuilder() {
      if (recordDataCase_ == 1) {
         return (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
    }

    public static final int LOST_FIELD_NUMBER = 2;
    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     * @return Whether the lost field is set.
     */
    @java.lang.Override
    public boolean hasLost() {
      return recordDataCase_ == 2;
    }
    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     * @return The lost.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.LostSituation getLost() {
      if (recordDataCase_ == 2) {
         return (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder getLostOrBuilder() {
      if (recordDataCase_ == 2) {
         return (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
    }

    public static final int FILE_FIELD_NUMBER = 3;
    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     * @return Whether the file field is set.
     */
    @java.lang.Override
    public boolean hasFile() {
      return recordDataCase_ == 3;
    }
    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     * @return The file.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.File getFile() {
      if (recordDataCase_ == 3) {
         return (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.File file = 3;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder getFileOrBuilder() {
      if (recordDataCase_ == 3) {
         return (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
    }

    public static final int THREAD_FIELD_NUMBER = 4;
    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     * @return Whether the thread field is set.
     */
    @java.lang.Override
    public boolean hasThread() {
      return recordDataCase_ == 4;
    }
    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     * @return The thread.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Thread getThread() {
      if (recordDataCase_ == 4) {
         return (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.Thread thread = 4;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder getThreadOrBuilder() {
      if (recordDataCase_ == 4) {
         return (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
    }

    public static final int META_INFO_FIELD_NUMBER = 5;
    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     * @return Whether the metaInfo field is set.
     */
    @java.lang.Override
    public boolean hasMetaInfo() {
      return recordDataCase_ == 5;
    }
    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     * @return The metaInfo.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getMetaInfo() {
      if (recordDataCase_ == 5) {
         return (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder getMetaInfoOrBuilder() {
      if (recordDataCase_ == 5) {
         return (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
    }

    public static final int CONTEXT_SWITCH_FIELD_NUMBER = 6;
    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     * @return Whether the contextSwitch field is set.
     */
    @java.lang.Override
    public boolean hasContextSwitch() {
      return recordDataCase_ == 6;
    }
    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     * @return The contextSwitch.
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getContextSwitch() {
      if (recordDataCase_ == 6) {
         return (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
    }
    /**
     * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
     */
    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder getContextSwitchOrBuilder() {
      if (recordDataCase_ == 6) {
         return (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_;
      }
      return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (recordDataCase_ == 1) {
        output.writeMessage(1, (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_);
      }
      if (recordDataCase_ == 2) {
        output.writeMessage(2, (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_);
      }
      if (recordDataCase_ == 3) {
        output.writeMessage(3, (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_);
      }
      if (recordDataCase_ == 4) {
        output.writeMessage(4, (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_);
      }
      if (recordDataCase_ == 5) {
        output.writeMessage(5, (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_);
      }
      if (recordDataCase_ == 6) {
        output.writeMessage(6, (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (recordDataCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_);
      }
      if (recordDataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_);
      }
      if (recordDataCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_);
      }
      if (recordDataCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_);
      }
      if (recordDataCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_);
      }
      if (recordDataCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof simpleperf.cleanup.proto.SimpleperfReport.Record)) {
        return super.equals(obj);
      }
      simpleperf.cleanup.proto.SimpleperfReport.Record other = (simpleperf.cleanup.proto.SimpleperfReport.Record) obj;

      if (!getRecordDataCase().equals(other.getRecordDataCase())) return false;
      switch (recordDataCase_) {
        case 1:
          if (!getSample()
              .equals(other.getSample())) return false;
          break;
        case 2:
          if (!getLost()
              .equals(other.getLost())) return false;
          break;
        case 3:
          if (!getFile()
              .equals(other.getFile())) return false;
          break;
        case 4:
          if (!getThread()
              .equals(other.getThread())) return false;
          break;
        case 5:
          if (!getMetaInfo()
              .equals(other.getMetaInfo())) return false;
          break;
        case 6:
          if (!getContextSwitch()
              .equals(other.getContextSwitch())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (recordDataCase_) {
        case 1:
          hash = (37 * hash) + SAMPLE_FIELD_NUMBER;
          hash = (53 * hash) + getSample().hashCode();
          break;
        case 2:
          hash = (37 * hash) + LOST_FIELD_NUMBER;
          hash = (53 * hash) + getLost().hashCode();
          break;
        case 3:
          hash = (37 * hash) + FILE_FIELD_NUMBER;
          hash = (53 * hash) + getFile().hashCode();
          break;
        case 4:
          hash = (37 * hash) + THREAD_FIELD_NUMBER;
          hash = (53 * hash) + getThread().hashCode();
          break;
        case 5:
          hash = (37 * hash) + META_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getMetaInfo().hashCode();
          break;
        case 6:
          hash = (37 * hash) + CONTEXT_SWITCH_FIELD_NUMBER;
          hash = (53 * hash) + getContextSwitch().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static simpleperf.cleanup.proto.SimpleperfReport.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(simpleperf.cleanup.proto.SimpleperfReport.Record prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code simpleperf_report_proto.Record}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:simpleperf_report_proto.Record)
        simpleperf.cleanup.proto.SimpleperfReport.RecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Record_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                simpleperf.cleanup.proto.SimpleperfReport.Record.class, simpleperf.cleanup.proto.SimpleperfReport.Record.Builder.class);
      }

      // Construct using simpleperf.cleanup.proto.SimpleperfReport.Record.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        recordDataCase_ = 0;
        recordData_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.internal_static_simpleperf_report_proto_Record_descriptor;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Record getDefaultInstanceForType() {
        return simpleperf.cleanup.proto.SimpleperfReport.Record.getDefaultInstance();
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Record build() {
        simpleperf.cleanup.proto.SimpleperfReport.Record result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Record buildPartial() {
        simpleperf.cleanup.proto.SimpleperfReport.Record result = new simpleperf.cleanup.proto.SimpleperfReport.Record(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (recordDataCase_ == 1) {
          if (sampleBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = sampleBuilder_.build();
          }
        }
        if (recordDataCase_ == 2) {
          if (lostBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = lostBuilder_.build();
          }
        }
        if (recordDataCase_ == 3) {
          if (fileBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = fileBuilder_.build();
          }
        }
        if (recordDataCase_ == 4) {
          if (threadBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = threadBuilder_.build();
          }
        }
        if (recordDataCase_ == 5) {
          if (metaInfoBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = metaInfoBuilder_.build();
          }
        }
        if (recordDataCase_ == 6) {
          if (contextSwitchBuilder_ == null) {
            result.recordData_ = recordData_;
          } else {
            result.recordData_ = contextSwitchBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.recordDataCase_ = recordDataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof simpleperf.cleanup.proto.SimpleperfReport.Record) {
          return mergeFrom((simpleperf.cleanup.proto.SimpleperfReport.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(simpleperf.cleanup.proto.SimpleperfReport.Record other) {
        if (other == simpleperf.cleanup.proto.SimpleperfReport.Record.getDefaultInstance()) return this;
        switch (other.getRecordDataCase()) {
          case SAMPLE: {
            mergeSample(other.getSample());
            break;
          }
          case LOST: {
            mergeLost(other.getLost());
            break;
          }
          case FILE: {
            mergeFile(other.getFile());
            break;
          }
          case THREAD: {
            mergeThread(other.getThread());
            break;
          }
          case META_INFO: {
            mergeMetaInfo(other.getMetaInfo());
            break;
          }
          case CONTEXT_SWITCH: {
            mergeContextSwitch(other.getContextSwitch());
            break;
          }
          case RECORDDATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        simpleperf.cleanup.proto.SimpleperfReport.Record parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (simpleperf.cleanup.proto.SimpleperfReport.Record) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int recordDataCase_ = 0;
      private java.lang.Object recordData_;
      public RecordDataCase
          getRecordDataCase() {
        return RecordDataCase.forNumber(
            recordDataCase_);
      }

      public Builder clearRecordData() {
        recordDataCase_ = 0;
        recordData_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample, simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder, simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder> sampleBuilder_;
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       * @return Whether the sample field is set.
       */
      @java.lang.Override
      public boolean hasSample() {
        return recordDataCase_ == 1;
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       * @return The sample.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Sample getSample() {
        if (sampleBuilder_ == null) {
          if (recordDataCase_ == 1) {
            return (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
        } else {
          if (recordDataCase_ == 1) {
            return sampleBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      public Builder setSample(simpleperf.cleanup.proto.SimpleperfReport.Sample value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          sampleBuilder_.setMessage(value);
        }
        recordDataCase_ = 1;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      public Builder setSample(
          simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          sampleBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 1;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      public Builder mergeSample(simpleperf.cleanup.proto.SimpleperfReport.Sample value) {
        if (sampleBuilder_ == null) {
          if (recordDataCase_ == 1 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.Sample.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 1) {
            sampleBuilder_.mergeFrom(value);
          }
          sampleBuilder_.setMessage(value);
        }
        recordDataCase_ = 1;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      public Builder clearSample() {
        if (sampleBuilder_ == null) {
          if (recordDataCase_ == 1) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 1) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          sampleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder getSampleBuilder() {
        return getSampleFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder getSampleOrBuilder() {
        if ((recordDataCase_ == 1) && (sampleBuilder_ != null)) {
          return sampleBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 1) {
            return (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.Sample sample = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Sample, simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder, simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder>
          getSampleFieldBuilder() {
        if (sampleBuilder_ == null) {
          if (!(recordDataCase_ == 1)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.Sample.getDefaultInstance();
          }
          sampleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.Sample, simpleperf.cleanup.proto.SimpleperfReport.Sample.Builder, simpleperf.cleanup.proto.SimpleperfReport.SampleOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.Sample) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 1;
        onChanged();;
        return sampleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.LostSituation, simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder, simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder> lostBuilder_;
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       * @return Whether the lost field is set.
       */
      @java.lang.Override
      public boolean hasLost() {
        return recordDataCase_ == 2;
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       * @return The lost.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituation getLost() {
        if (lostBuilder_ == null) {
          if (recordDataCase_ == 2) {
            return (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
        } else {
          if (recordDataCase_ == 2) {
            return lostBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      public Builder setLost(simpleperf.cleanup.proto.SimpleperfReport.LostSituation value) {
        if (lostBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          lostBuilder_.setMessage(value);
        }
        recordDataCase_ = 2;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      public Builder setLost(
          simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder builderForValue) {
        if (lostBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          lostBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 2;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      public Builder mergeLost(simpleperf.cleanup.proto.SimpleperfReport.LostSituation value) {
        if (lostBuilder_ == null) {
          if (recordDataCase_ == 2 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.LostSituation.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 2) {
            lostBuilder_.mergeFrom(value);
          }
          lostBuilder_.setMessage(value);
        }
        recordDataCase_ = 2;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      public Builder clearLost() {
        if (lostBuilder_ == null) {
          if (recordDataCase_ == 2) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 2) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          lostBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder getLostBuilder() {
        return getLostFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder getLostOrBuilder() {
        if ((recordDataCase_ == 2) && (lostBuilder_ != null)) {
          return lostBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 2) {
            return (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.LostSituation lost = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.LostSituation, simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder, simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder>
          getLostFieldBuilder() {
        if (lostBuilder_ == null) {
          if (!(recordDataCase_ == 2)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.LostSituation.getDefaultInstance();
          }
          lostBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.LostSituation, simpleperf.cleanup.proto.SimpleperfReport.LostSituation.Builder, simpleperf.cleanup.proto.SimpleperfReport.LostSituationOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.LostSituation) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 2;
        onChanged();;
        return lostBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.File, simpleperf.cleanup.proto.SimpleperfReport.File.Builder, simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder> fileBuilder_;
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       * @return Whether the file field is set.
       */
      @java.lang.Override
      public boolean hasFile() {
        return recordDataCase_ == 3;
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       * @return The file.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.File getFile() {
        if (fileBuilder_ == null) {
          if (recordDataCase_ == 3) {
            return (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
        } else {
          if (recordDataCase_ == 3) {
            return fileBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      public Builder setFile(simpleperf.cleanup.proto.SimpleperfReport.File value) {
        if (fileBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          fileBuilder_.setMessage(value);
        }
        recordDataCase_ = 3;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      public Builder setFile(
          simpleperf.cleanup.proto.SimpleperfReport.File.Builder builderForValue) {
        if (fileBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          fileBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 3;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      public Builder mergeFile(simpleperf.cleanup.proto.SimpleperfReport.File value) {
        if (fileBuilder_ == null) {
          if (recordDataCase_ == 3 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.File.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.File) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 3) {
            fileBuilder_.mergeFrom(value);
          }
          fileBuilder_.setMessage(value);
        }
        recordDataCase_ = 3;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      public Builder clearFile() {
        if (fileBuilder_ == null) {
          if (recordDataCase_ == 3) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 3) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          fileBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.File.Builder getFileBuilder() {
        return getFileFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder getFileOrBuilder() {
        if ((recordDataCase_ == 3) && (fileBuilder_ != null)) {
          return fileBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 3) {
            return (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.File file = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.File, simpleperf.cleanup.proto.SimpleperfReport.File.Builder, simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder>
          getFileFieldBuilder() {
        if (fileBuilder_ == null) {
          if (!(recordDataCase_ == 3)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.File.getDefaultInstance();
          }
          fileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.File, simpleperf.cleanup.proto.SimpleperfReport.File.Builder, simpleperf.cleanup.proto.SimpleperfReport.FileOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.File) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 3;
        onChanged();;
        return fileBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Thread, simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder, simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder> threadBuilder_;
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       * @return Whether the thread field is set.
       */
      @java.lang.Override
      public boolean hasThread() {
        return recordDataCase_ == 4;
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       * @return The thread.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.Thread getThread() {
        if (threadBuilder_ == null) {
          if (recordDataCase_ == 4) {
            return (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
        } else {
          if (recordDataCase_ == 4) {
            return threadBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      public Builder setThread(simpleperf.cleanup.proto.SimpleperfReport.Thread value) {
        if (threadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          threadBuilder_.setMessage(value);
        }
        recordDataCase_ = 4;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      public Builder setThread(
          simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder builderForValue) {
        if (threadBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          threadBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 4;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      public Builder mergeThread(simpleperf.cleanup.proto.SimpleperfReport.Thread value) {
        if (threadBuilder_ == null) {
          if (recordDataCase_ == 4 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.Thread.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 4) {
            threadBuilder_.mergeFrom(value);
          }
          threadBuilder_.setMessage(value);
        }
        recordDataCase_ = 4;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      public Builder clearThread() {
        if (threadBuilder_ == null) {
          if (recordDataCase_ == 4) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 4) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          threadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder getThreadBuilder() {
        return getThreadFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder getThreadOrBuilder() {
        if ((recordDataCase_ == 4) && (threadBuilder_ != null)) {
          return threadBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 4) {
            return (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.Thread thread = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.Thread, simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder, simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder>
          getThreadFieldBuilder() {
        if (threadBuilder_ == null) {
          if (!(recordDataCase_ == 4)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.Thread.getDefaultInstance();
          }
          threadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.Thread, simpleperf.cleanup.proto.SimpleperfReport.Thread.Builder, simpleperf.cleanup.proto.SimpleperfReport.ThreadOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.Thread) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 4;
        onChanged();;
        return threadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.MetaInfo, simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder, simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder> metaInfoBuilder_;
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       * @return Whether the metaInfo field is set.
       */
      @java.lang.Override
      public boolean hasMetaInfo() {
        return recordDataCase_ == 5;
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       * @return The metaInfo.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo getMetaInfo() {
        if (metaInfoBuilder_ == null) {
          if (recordDataCase_ == 5) {
            return (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
        } else {
          if (recordDataCase_ == 5) {
            return metaInfoBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      public Builder setMetaInfo(simpleperf.cleanup.proto.SimpleperfReport.MetaInfo value) {
        if (metaInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          metaInfoBuilder_.setMessage(value);
        }
        recordDataCase_ = 5;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      public Builder setMetaInfo(
          simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder builderForValue) {
        if (metaInfoBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          metaInfoBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 5;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      public Builder mergeMetaInfo(simpleperf.cleanup.proto.SimpleperfReport.MetaInfo value) {
        if (metaInfoBuilder_ == null) {
          if (recordDataCase_ == 5 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 5) {
            metaInfoBuilder_.mergeFrom(value);
          }
          metaInfoBuilder_.setMessage(value);
        }
        recordDataCase_ = 5;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      public Builder clearMetaInfo() {
        if (metaInfoBuilder_ == null) {
          if (recordDataCase_ == 5) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 5) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          metaInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder getMetaInfoBuilder() {
        return getMetaInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder getMetaInfoOrBuilder() {
        if ((recordDataCase_ == 5) && (metaInfoBuilder_ != null)) {
          return metaInfoBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 5) {
            return (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.MetaInfo meta_info = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.MetaInfo, simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder, simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder>
          getMetaInfoFieldBuilder() {
        if (metaInfoBuilder_ == null) {
          if (!(recordDataCase_ == 5)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.getDefaultInstance();
          }
          metaInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.MetaInfo, simpleperf.cleanup.proto.SimpleperfReport.MetaInfo.Builder, simpleperf.cleanup.proto.SimpleperfReport.MetaInfoOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.MetaInfo) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 5;
        onChanged();;
        return metaInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder> contextSwitchBuilder_;
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       * @return Whether the contextSwitch field is set.
       */
      @java.lang.Override
      public boolean hasContextSwitch() {
        return recordDataCase_ == 6;
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       * @return The contextSwitch.
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch getContextSwitch() {
        if (contextSwitchBuilder_ == null) {
          if (recordDataCase_ == 6) {
            return (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
        } else {
          if (recordDataCase_ == 6) {
            return contextSwitchBuilder_.getMessage();
          }
          return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      public Builder setContextSwitch(simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch value) {
        if (contextSwitchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recordData_ = value;
          onChanged();
        } else {
          contextSwitchBuilder_.setMessage(value);
        }
        recordDataCase_ = 6;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      public Builder setContextSwitch(
          simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder builderForValue) {
        if (contextSwitchBuilder_ == null) {
          recordData_ = builderForValue.build();
          onChanged();
        } else {
          contextSwitchBuilder_.setMessage(builderForValue.build());
        }
        recordDataCase_ = 6;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      public Builder mergeContextSwitch(simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch value) {
        if (contextSwitchBuilder_ == null) {
          if (recordDataCase_ == 6 &&
              recordData_ != simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance()) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.newBuilder((simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_)
                .mergeFrom(value).buildPartial();
          } else {
            recordData_ = value;
          }
          onChanged();
        } else {
          if (recordDataCase_ == 6) {
            contextSwitchBuilder_.mergeFrom(value);
          }
          contextSwitchBuilder_.setMessage(value);
        }
        recordDataCase_ = 6;
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      public Builder clearContextSwitch() {
        if (contextSwitchBuilder_ == null) {
          if (recordDataCase_ == 6) {
            recordDataCase_ = 0;
            recordData_ = null;
            onChanged();
          }
        } else {
          if (recordDataCase_ == 6) {
            recordDataCase_ = 0;
            recordData_ = null;
          }
          contextSwitchBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder getContextSwitchBuilder() {
        return getContextSwitchFieldBuilder().getBuilder();
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      @java.lang.Override
      public simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder getContextSwitchOrBuilder() {
        if ((recordDataCase_ == 6) && (contextSwitchBuilder_ != null)) {
          return contextSwitchBuilder_.getMessageOrBuilder();
        } else {
          if (recordDataCase_ == 6) {
            return (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_;
          }
          return simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
        }
      }
      /**
       * <code>.simpleperf_report_proto.ContextSwitch context_switch = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder>
          getContextSwitchFieldBuilder() {
        if (contextSwitchBuilder_ == null) {
          if (!(recordDataCase_ == 6)) {
            recordData_ = simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.getDefaultInstance();
          }
          contextSwitchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch.Builder, simpleperf.cleanup.proto.SimpleperfReport.ContextSwitchOrBuilder>(
                  (simpleperf.cleanup.proto.SimpleperfReport.ContextSwitch) recordData_,
                  getParentForChildren(),
                  isClean());
          recordData_ = null;
        }
        recordDataCase_ = 6;
        onChanged();;
        return contextSwitchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:simpleperf_report_proto.Record)
    }

    // @@protoc_insertion_point(class_scope:simpleperf_report_proto.Record)
    private static final simpleperf.cleanup.proto.SimpleperfReport.Record DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new simpleperf.cleanup.proto.SimpleperfReport.Record();
    }

    public static simpleperf.cleanup.proto.SimpleperfReport.Record getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Record>
        PARSER = new com.google.protobuf.AbstractParser<Record>() {
      @java.lang.Override
      public Record parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public simpleperf.cleanup.proto.SimpleperfReport.Record getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_Sample_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_Sample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_Sample_CallChainEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_Sample_UnwindingResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_LostSituation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_LostSituation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_File_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_File_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_Thread_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_Thread_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_MetaInfo_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_MetaInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_ContextSwitch_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_ContextSwitch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_simpleperf_report_proto_Record_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_simpleperf_report_proto_Record_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027cmd_report_sample.proto\022\027simpleperf_re" +
      "port_proto\"\355\006\n\006Sample\022\014\n\004time\030\001 \001(\004\022\021\n\tt" +
      "hread_id\030\002 \001(\005\022A\n\tcallchain\030\003 \003(\0132..simp" +
      "leperf_report_proto.Sample.CallChainEntr" +
      "y\022\023\n\013event_count\030\004 \001(\004\022\025\n\revent_type_id\030" +
      "\005 \001(\r\022I\n\020unwinding_result\030\006 \001(\0132/.simple" +
      "perf_report_proto.Sample.UnwindingResult" +
      "\032\224\002\n\016CallChainEntry\022\025\n\rvaddr_in_file\030\001 \001" +
      "(\004\022\017\n\007file_id\030\002 \001(\r\022\021\n\tsymbol_id\030\003 \001(\005\022c" +
      "\n\016execution_type\030\004 \001(\0162<.simpleperf_repo" +
      "rt_proto.Sample.CallChainEntry.Execution" +
      "Type:\rNATIVE_METHOD\"b\n\rExecutionType\022\021\n\r" +
      "NATIVE_METHOD\020\000\022\032\n\026INTERPRETED_JVM_METHO" +
      "D\020\001\022\022\n\016JIT_JVM_METHOD\020\002\022\016\n\nART_METHOD\020\003\032" +
      "\360\002\n\017UnwindingResult\022\026\n\016raw_error_code\030\001 " +
      "\001(\r\022\022\n\nerror_addr\030\002 \001(\004\022M\n\nerror_code\030\003 " +
      "\001(\01629.simpleperf_report_proto.Sample.Unw" +
      "indingResult.ErrorCode\"\341\001\n\tErrorCode\022\016\n\n" +
      "ERROR_NONE\020\000\022\021\n\rERROR_UNKNOWN\020\001\022\032\n\026ERROR" +
      "_NOT_ENOUGH_STACK\020\002\022\030\n\024ERROR_MEMORY_INVA" +
      "LID\020\003\022\025\n\021ERROR_UNWIND_INFO\020\004\022\025\n\021ERROR_IN" +
      "VALID_MAP\020\005\022\034\n\030ERROR_MAX_FRAME_EXCEEDED\020" +
      "\006\022\030\n\024ERROR_REPEATED_FRAME\020\007\022\025\n\021ERROR_INV" +
      "ALID_ELF\020\010\"9\n\rLostSituation\022\024\n\014sample_co" +
      "unt\030\001 \001(\004\022\022\n\nlost_count\030\002 \001(\004\"H\n\004File\022\n\n" +
      "\002id\030\001 \001(\r\022\014\n\004path\030\002 \001(\t\022\016\n\006symbol\030\003 \003(\t\022" +
      "\026\n\016mangled_symbol\030\004 \003(\t\"D\n\006Thread\022\021\n\tthr" +
      "ead_id\030\001 \001(\r\022\022\n\nprocess_id\030\002 \001(\r\022\023\n\013thre" +
      "ad_name\030\003 \001(\t\"\231\001\n\010MetaInfo\022\022\n\nevent_type" +
      "\030\001 \003(\t\022\030\n\020app_package_name\030\002 \001(\t\022\020\n\010app_" +
      "type\030\003 \001(\t\022\033\n\023android_sdk_version\030\004 \001(\t\022" +
      "\032\n\022android_build_type\030\005 \001(\t\022\024\n\014trace_off" +
      "cpu\030\006 \001(\010\"C\n\rContextSwitch\022\021\n\tswitch_on\030" +
      "\001 \001(\010\022\014\n\004time\030\002 \001(\004\022\021\n\tthread_id\030\003 \001(\r\"\336" +
      "\002\n\006Record\0221\n\006sample\030\001 \001(\0132\037.simpleperf_r" +
      "eport_proto.SampleH\000\0226\n\004lost\030\002 \001(\0132&.sim" +
      "pleperf_report_proto.LostSituationH\000\022-\n\004" +
      "file\030\003 \001(\0132\035.simpleperf_report_proto.Fil" +
      "eH\000\0221\n\006thread\030\004 \001(\0132\037.simpleperf_report_" +
      "proto.ThreadH\000\0226\n\tmeta_info\030\005 \001(\0132!.simp" +
      "leperf_report_proto.MetaInfoH\000\022@\n\016contex" +
      "t_switch\030\006 \001(\0132&.simpleperf_report_proto" +
      ".ContextSwitchH\000B\r\n\013record_dataB.\n\030simpl" +
      "eperf.cleanup.protoB\020SimpleperfReportH\003"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_simpleperf_report_proto_Sample_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_simpleperf_report_proto_Sample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_Sample_descriptor,
        new java.lang.String[] { "Time", "ThreadId", "Callchain", "EventCount", "EventTypeId", "UnwindingResult", });
    internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor =
      internal_static_simpleperf_report_proto_Sample_descriptor.getNestedTypes().get(0);
    internal_static_simpleperf_report_proto_Sample_CallChainEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_Sample_CallChainEntry_descriptor,
        new java.lang.String[] { "VaddrInFile", "FileId", "SymbolId", "ExecutionType", });
    internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor =
      internal_static_simpleperf_report_proto_Sample_descriptor.getNestedTypes().get(1);
    internal_static_simpleperf_report_proto_Sample_UnwindingResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_Sample_UnwindingResult_descriptor,
        new java.lang.String[] { "RawErrorCode", "ErrorAddr", "ErrorCode", });
    internal_static_simpleperf_report_proto_LostSituation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_simpleperf_report_proto_LostSituation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_LostSituation_descriptor,
        new java.lang.String[] { "SampleCount", "LostCount", });
    internal_static_simpleperf_report_proto_File_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_simpleperf_report_proto_File_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_File_descriptor,
        new java.lang.String[] { "Id", "Path", "Symbol", "MangledSymbol", });
    internal_static_simpleperf_report_proto_Thread_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_simpleperf_report_proto_Thread_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_Thread_descriptor,
        new java.lang.String[] { "ThreadId", "ProcessId", "ThreadName", });
    internal_static_simpleperf_report_proto_MetaInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_simpleperf_report_proto_MetaInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_MetaInfo_descriptor,
        new java.lang.String[] { "EventType", "AppPackageName", "AppType", "AndroidSdkVersion", "AndroidBuildType", "TraceOffcpu", });
    internal_static_simpleperf_report_proto_ContextSwitch_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_simpleperf_report_proto_ContextSwitch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_ContextSwitch_descriptor,
        new java.lang.String[] { "SwitchOn", "Time", "ThreadId", });
    internal_static_simpleperf_report_proto_Record_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_simpleperf_report_proto_Record_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_simpleperf_report_proto_Record_descriptor,
        new java.lang.String[] { "Sample", "Lost", "File", "Thread", "MetaInfo", "ContextSwitch", "RecordData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
